<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>峻峻尼的个人博客</title>
    <subtitle></subtitle>
    <icon>http://example.com/images/favicon.ico</icon>
    <link href="http://example.com" />
    <author>
      <name>峻峻尼</name>
    </author>
    <updated>2023-02-20T00:54:39.606Z</updated>
    <entry>
        <id>http://example.com/2023/02/20/2023.2.13/</id>
        <title>HCIA-security(一) 2023.2.13</title>
        <link rel="alternate" href="http://example.com/2023/02/20/2023.2.13/"/>
        <content type="html">&lt;p&gt;传统防火墙：&lt;/p&gt;
&lt;p&gt;​	病毒特征库 —&amp;gt; 网咯已经出现的病毒 —&amp;gt; 源码进行 HASH 对文件进行 HASH 计算 —&amp;gt; 病毒特征库&lt;/p&gt;
&lt;p&gt;变种病毒：&lt;/p&gt;
&lt;p&gt;​	已知病毒 —&amp;gt; 源码修改 —&amp;gt; 新的病毒（传统防火墙无法）&lt;/p&gt;
&lt;p&gt;下一代防火墙：&lt;/p&gt;
&lt;p&gt;​	人工智能技术 / 引擎 —&amp;gt; 对已知病毒 —&amp;gt; 进行变种计算&lt;/p&gt;
&lt;p&gt;云 管 (网) 端  联动处理&lt;/p&gt;
&lt;p&gt;​	安全厂商公有云平台&lt;/p&gt;
&lt;p&gt;​	网络设备&lt;/p&gt;
&lt;p&gt;​	终端&lt;/p&gt;
&lt;p&gt;信息安全：&lt;/p&gt;
&lt;p&gt;​	防止任何对数据进行未授权访问的措施，或者防止造成信息有意无意泄漏、破坏、丢失等问题的发生，让数据处于远离危险、免于威胁的状态或特性。&lt;/p&gt;
&lt;p&gt;网络安全：&lt;/p&gt;
&lt;p&gt;​	计算机网络环境下的信息安全。&lt;/p&gt;
&lt;p&gt;APT 攻击：&lt;/p&gt;
&lt;p&gt;高级持续性威胁。 利用先进的攻击手段对特定目标进行长期持续性网络攻击的攻击形式&lt;/p&gt;
&lt;p&gt;TCP/IP 协议栈&lt;/p&gt;
&lt;p&gt;​	基于可信任环境开发，缺乏信息安全机制&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 缺乏数据源验证机制
2. 缺乏完整性验证机制
3. 缺乏机密性保护机制
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安全攻击基本模式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;截获：嗅探，侦听，破坏数据的机密性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	防护的措施：数据加解密技术&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;篡改：数据篡改，破环数据的完整性&lt;/p&gt;
&lt;p&gt;防护措施：完整性校验机制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中断：线路破坏，Dos 拒绝服务攻击，破环数据的可用性&lt;/p&gt;
&lt;p&gt;防护措施：Anti-DDoS 设备&lt;/p&gt;
&lt;p&gt;DoS 拒绝服务攻击：占用服务器硬件资源，网络带宽。使得服务器无法为正常用户提供服务&lt;/p&gt;
&lt;p&gt;​	TCP SYN 洪水攻击：占用服务器 TCP 资源，硬件资源&lt;/p&gt;
&lt;p&gt;​	ICMP 洪水攻击：占用服务器硬件资源，网络带宽&lt;/p&gt;
&lt;p&gt;​	UDP 洪水攻击：占用服务器硬件资源，网络带宽&lt;/p&gt;
&lt;p&gt;DDoS 分布式拒绝服务攻击&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;伪造：身份伪造，数据伪造，破坏数据真实性&lt;/p&gt;
&lt;p&gt;防护措施：身份认证技术&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;勒索病毒：&lt;/p&gt;
&lt;p&gt;​	防护原理：在关键文件创建诱饵文件（隐藏），一旦感染加密诱饵文件，触发安全软件，隔离文件&lt;/p&gt;
&lt;p&gt;勒索病毒的过程：&lt;/p&gt;
&lt;p&gt;感染媒介 —》C&amp;amp;C 通信 —》文件加密 —》横向移动&lt;/p&gt;
&lt;p&gt;钓鱼软件	 匿名通信 	混合加密体系	弱点横向探测&lt;br&gt;
蠕虫病毒 	下载载荷	弹出勒索对话框	蠕虫式传播&lt;br&gt;
恶意邮件	 DGA 通信					MS17-010 永恒之蓝漏洞&lt;/p&gt;
&lt;p&gt;信息安全的五要素：&lt;/p&gt;
&lt;p&gt;保密性 —confidentiality&lt;br&gt;
 完整性 —integrity&lt;br&gt;
 可用性 —availability&lt;br&gt;
 可控性 —controllability&lt;br&gt;
 不可否认性 —Non-repudiation&lt;/p&gt;
&lt;h3 id=&#34;防火墙基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙基础&#34;&gt;#&lt;/a&gt; 防火墙基础：&lt;/h3&gt;
&lt;h4 id=&#34;基本功能&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基本功能&#34;&gt;#&lt;/a&gt; 基本功能：&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;1. 访问控制
2. 入侵防御系统IPS（主动）   IDS 入侵检测系统（淘汰，被动）
3. 身份认证技术
4. VPN 远程接入
5. 病毒查杀
6. 文件过滤
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;防火墙分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙分类&#34;&gt;#&lt;/a&gt; 防火墙分类：&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;软硬件&lt;/p&gt;
&lt;p&gt;硬件防火墙：网络安全设备&lt;/p&gt;
&lt;p&gt;软件防火墙：终端&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术&lt;/p&gt;
&lt;p&gt;包过滤防火墙：包过滤技术 ACL&lt;/p&gt;
&lt;p&gt;应用代理防火墙：代理技术 WAF (web 应用代理防火墙)&lt;/p&gt;
&lt;p&gt;状态检测防火墙：状态检测技术&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;带宽&lt;/p&gt;
&lt;p&gt;百兆防火墙，千兆防火墙，万兆防火墙&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;防火墙发展史&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙发展史&#34;&gt;#&lt;/a&gt; 防火墙发展史：&lt;/h4&gt;
&lt;p&gt;包过滤技术 —》应用代理技术 —》状态检测技术 —》UTM 统一威胁网关 —》下一代防火墙 NGFW&lt;/p&gt;
&lt;p&gt;​	UTM 统一威胁网关：集成 IPS 功能，病毒检测 等功能&lt;/p&gt;
&lt;p&gt;​	下一代防火墙 NGFW：UTM 升级版，相较于上一代防火墙性能更加强大&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;防火墙接口 / 安全区域&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;安全区域&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安全区域&#34;&gt;#&lt;/a&gt; 安全区域：&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;默认安全区域：&lt;/p&gt;
&lt;p&gt;Local 本地区域：防火墙自身&lt;/p&gt;
&lt;p&gt;Trust 信任区域：一般将内网划分为信任区域&lt;/p&gt;
&lt;p&gt;DMZ 非军事化管理区域：一般将服务器划分为 DMZ 区域&lt;/p&gt;
&lt;p&gt;Untrust 非信任区域：一般将外网划分为非信任区域&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;默认安全区域无法删除&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自定义安全区域&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;安全级别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安全级别&#34;&gt;#&lt;/a&gt; 安全级别：&lt;/h5&gt;
&lt;p&gt;​	每个区域都存在安全级别，级别唯一&lt;/p&gt;
&lt;p&gt;​	本地：100&lt;/p&gt;
&lt;p&gt;​	Trust：85&lt;/p&gt;
&lt;p&gt;​	DMZ：50&lt;/p&gt;
&lt;p&gt;​	Untrust ：5&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;默认安全区域的级别也无法修改&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;防火墙基于接口划分区域&lt;/p&gt;
&lt;p&gt;下一代防火墙 ：默认所有区域之间都不允许访问，同一个区域内部允许访问&lt;/p&gt;
&lt;p&gt;[NGFW] firewall zone 区域&lt;br&gt;
 [] add int g 1/0/0&lt;/p&gt;
&lt;p&gt;[] fire zone name working 设置自定义区域&lt;br&gt;
 [] set priority 1 设置安全级别&lt;/p&gt;
&lt;h4 id=&#34;防火墙种类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙种类&#34;&gt;#&lt;/a&gt; 防火墙种类:&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;包过滤防火墙:&lt;/p&gt;
&lt;p&gt;本质为 ACL，基于报文的特征匹配报文，对报文进行过滤&lt;/p&gt;
&lt;p&gt;通常包过滤防火墙只匹配报文的头部，不检查应用层 Data&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺陷&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 1. 无法关联数据之间的关系，制定规则时需要部署双向规则
 2. 不检查应用层的数据
 3. 无法使用于多通道协议
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用代理防火墙：&lt;/p&gt;
&lt;p&gt;核心技术：代理技术 / 中间人技术&lt;/p&gt;
&lt;p&gt;针对特定的应用 / 服务进行安全检查&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺陷&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;成本高，针对应用开发&lt;/li&gt;
&lt;li&gt;维护难度高，应用升级，代理防火墙也需要升级&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;优势:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;检查应用层数据内容&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;市场仅存的应用代理防火墙：WAF Web 应用代理防火墙&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;状态检测防火墙：&lt;/p&gt;
&lt;p&gt;核心技术：状态检测&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优势&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 1. 关联数据之间的关系，会话信息
 2. 后续数据包处理效率高
 3. 检测应用层数据
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;会话表是状态检测防火墙转发的唯一的依据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;状态防火墙收到报文后 —&amp;gt; 判断是否转发：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;匹配会话表 —&amp;gt; 存在会话表 —&amp;gt; 内容安全检查（应用层数据）—&amp;gt; 刷新会话表 —&amp;gt; 转发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;匹配会话表 —&amp;gt; 不存在会话表 —&amp;gt; 判断是否可以创建会话表&lt;/p&gt;
&lt;p&gt;创建会话表的条件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. **首包检查**   （不是首包丢弃）
2. 路由
3. 包过滤规则
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所有应用通信：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 1. 基于TCP    首包：SYN
 2. **基于UDP  首包：所有的UDP报文**
 3. 基于ICMP  首包：ICMP Echo Request
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;防火墙部署&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙部署&#34;&gt;#&lt;/a&gt; 防火墙部署：&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;可靠性 冗余&lt;/p&gt;
&lt;p&gt;单机部署&lt;/p&gt;
&lt;p&gt;双机热备&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拓扑的位置&lt;/p&gt;
&lt;p&gt;直路部署：设备串联在网络中，对于网络影响较大&lt;/p&gt;
&lt;p&gt;旁路部署：设备旁挂在网络边缘，对网络基本无影响&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;3.	模型层次

路由模式：防火墙接口工作在网络层      路由表

交换模式：防火墙接口工作在数据链路层    VLAN
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;防火墙安全策略&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙安全策略&#34;&gt;#&lt;/a&gt; 防火墙安全策略：&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;包过滤过滤 —&amp;gt;acl&lt;/li&gt;
&lt;li&gt;内容安全 —&amp;gt; 应用数据进行病毒检测，文件过滤，邮件过滤等&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;安全策略的分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安全策略的分类&#34;&gt;#&lt;/a&gt; 安全策略的分类:&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;域间安全策略&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;域内安全策略&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接口安全策略&lt;/p&gt;
&lt;p&gt;http&lt;br&gt;
https&lt;br&gt;
ping&lt;br&gt;
snmp     管理&lt;br&gt;
 ssh      远程登录&lt;br&gt;
 telnet    远程登录&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;配置客户端访问服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[]security-policy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[]rule name trust &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone untrust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-address 10.1.11.1 32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-address 10.1.12.2 32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;配置同区域不能访问&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[]rule name tt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action deny&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;配置ospf进入full状态&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[] rule name ospf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone untrust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone local&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  service protocol 89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action permit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;dis  firewall session table verbose 查看会话表&lt;/p&gt;
&lt;p&gt;Current Total Sessions : 1&lt;br&gt;
http VPN:public --&amp;gt; public ID: a48f3648905d02c0553591da1&lt;/p&gt;
&lt;p&gt;​    协议	防火墙自身			区分会话&lt;br&gt;
 Zone: trust–&amp;gt; local TTL: 00:20:00 Left: 00:19:56&lt;/p&gt;
&lt;p&gt;​	区域			老化时间		剩余时间&lt;/p&gt;
&lt;p&gt;Output-interface: InLoopBack0 NextHop: 127.0.0.1 MAC: 00-00-00-00-00-00&lt;/p&gt;
&lt;p&gt;​	数据入口&lt;br&gt;
 &amp;lt;–packets:3073 bytes:3251431 --&amp;gt;packets:2881 bytes:705651&lt;br&gt;
128.18.196.4:1864–&amp;gt;128.18.196.251:80 PolicyName: test&lt;/p&gt;
&lt;h4 id=&#34;aspf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#aspf&#34;&gt;#&lt;/a&gt; ASPF&lt;/h4&gt;
&lt;p&gt;单通道协议：使用传输层一个端口的协议&lt;/p&gt;
&lt;p&gt;多通道协议：使用传输层两个或两个以上的端口的协议&lt;/p&gt;
&lt;h5 id=&#34;ftp文件传输协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp文件传输协议&#34;&gt;#&lt;/a&gt; FTP：文件传输协议&lt;/h5&gt;
&lt;p&gt;C/S，客户端可以从服务器上 上传或下载文件&lt;/p&gt;
&lt;p&gt;FTP:TCP 20 数据端口：传输 FTP 数据&lt;/p&gt;
&lt;p&gt;​	TCP 21 控制端口：协商 FTP 参数，传输模式，工作模式，认证&lt;/p&gt;
&lt;p&gt;FTP 工作模式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主动模式：服务器发起数据信道建立&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcia-%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0%5Cassets%5C%E4%B8%BB%E5%8A%A8.png&#34; alt=&#34;主动&#34;&gt;&lt;/li&gt;
&lt;li&gt;被动模式：客户端发起数据信道建立&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;、&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcia-%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0%5Cassets%5C%E8%A2%AB%E5%8A%A8.png&#34; alt=&#34;被动&#34;&gt;&lt;/p&gt;
&lt;p&gt;ASPF :&lt;/p&gt;
&lt;p&gt;​	特殊应用包过滤技术&lt;/p&gt;
&lt;p&gt;​	作用：监听应用层数据，动态创建 / 删除 Server-map 表&lt;/p&gt;
&lt;p&gt;存在 Server-map，就会创建会话表&lt;/p&gt;
&lt;p&gt;ASPF 适用于多通道协议场景，自动创建 Server-map 对应的会话表&lt;/p&gt;
&lt;p&gt;创建 Server-map 表项的场景：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 使能ASPF,转发基于TCP的多信道协议，创建动态Server-map表
2. 使能ASPF,转发基于UDP的多信道协议，创建动态Server-map表
3. 配置NAT-Server，创建静态Server-map表（不会老化）
4. 配置NAT No-Pat，创建动态server-map表
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;端口识别 / 端口映射：&lt;/p&gt;
&lt;p&gt;​	转换数据包中的 D.port，将非标准端口转换成标准端口&lt;/p&gt;
&lt;p&gt;分片缓存：&lt;/p&gt;
&lt;p&gt;​	包分片时，最后一个包分片携带网络层以上的头部，其余所有的包分片，不携带传输层 / 应用层的头部信息&lt;/p&gt;
&lt;p&gt;​	加快数据发送的效率&lt;/p&gt;
&lt;p&gt;​	造成：防火墙无法识别到后续包分片的端口信息&lt;/p&gt;
&lt;p&gt;将收到的包分片进行重组之后再匹配安全策略，防止前面的包分片因不携带 IP 上层头部信息导致无法匹配安全策略&lt;/p&gt;
&lt;p&gt;长连接：会话表老化时间&lt;/p&gt;
&lt;p&gt;​	维持长时间会话表老化时间&lt;/p&gt;
&lt;p&gt;​	针对于特殊的应用，应用需要维持长时间的通信&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​	出口网关设备：pppoe+nat + 默认路由 + 回包路由&lt;/p&gt;
&lt;p&gt;NAT 网络地址转换：&lt;/p&gt;
&lt;p&gt;​	部署位置：一般部署再网络出口设备&lt;/p&gt;
&lt;p&gt;NAT 分类：&lt;/p&gt;
&lt;p&gt;​	S.NAT: 转换源 IP 地址 / 源端口&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 地址池模式：no-pat，pat
2. 出接口模式：Easy-IP 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​	D.NAT: 转换目的 IP 地址 / 目的端口&lt;/p&gt;
&lt;p&gt;​	NAT-Server（服务器映射）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;防火墙配置nat策略&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nat-policy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rule name nat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone dmz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  egress-interface GigabitEthernet1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action nat easy-ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;security-policy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rule name ospf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone local&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  service protocol 89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rule name t_ut&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone dmz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone untrust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action permit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;nat server fff protocol  tcp global  100.1.24.3 ftp inside 10.1.2.1 ftp&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进行源地址转换时，先匹配安全策略，再进行地址转换&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	安全策略：S.IP 私网内设备的 IP 地址&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进行目的地址转换时&lt;/strong&gt;，&lt;strong&gt;先进行地址转换&lt;/strong&gt;，&lt;strong&gt;在进行安全策略匹配&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	安全策略：D.IP 私网服务器的 IP 地址&lt;/p&gt;
&lt;p&gt;双向 NAT：&lt;/p&gt;
&lt;p&gt;​	S.NAT: 转换数据包的源 IP 地址&lt;/p&gt;
&lt;p&gt;​	D.NAT: 转换数据包的目的 IP 地址&lt;/p&gt;
&lt;p&gt;​	双向 NAT: 同一个数据包，即转换源地址同时转换目的地址 0&lt;/p&gt;
&lt;p&gt;应用场景：实现私网内部通过公网地址访问私网内部的服务器，隐藏服务器的真实 IP 地址&lt;/p&gt;
&lt;p&gt;网络可靠性 / 冗余性&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;设备冗余：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;热备：备份的设备处于上电状态  堆叠 / 集群 / VRRP&lt;/li&gt;
&lt;li&gt;冷备：备份的设备处于下电状态&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;端口冗余:&lt;/p&gt;
&lt;p&gt;以太网链路聚合 Eth-Trunk&lt;/p&gt;
&lt;p&gt;ppp 协议链路聚合 MP-Group&lt;/p&gt;
&lt;p&gt;HDLC 协议链路聚合 IP-Trunk&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;链路冗余：&lt;/p&gt;
&lt;p&gt;拓扑设计规划&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;防火墙冗余技术：双机热备&lt;/p&gt;
&lt;p&gt;​	vrrp 协议：实现将多个网关逻辑上虚拟为一个网关&lt;/p&gt;
&lt;p&gt;防火墙使用 VRRP 实现冗余存在的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;防火墙进行主备切换时，备份设备收到后续的流量因不存在会话表项，造成流量丢失&lt;/p&gt;
&lt;p&gt;解决：HRP 华为私有协议：防火墙之间同步状态信息和关键配置信息（会话表，Server-map ，NAT-Policy ，安全策略）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;防火墙存在多个 VRRP 组，VRRP 组内角色不一致时，导致流量来回路径不一致，如果存在接口故障，甚至会导致流量丢失&lt;/p&gt;
&lt;p&gt;解决：VGMP 协议（VRRP 组管理协议）&lt;/p&gt;
&lt;p&gt;作用：不同的 VRRP 组内保障角色的一致性&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;防火墙双机热备中使用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;VRRP 协议 + VGMP 协议&lt;/li&gt;
&lt;li&gt;HRP 协议&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;防火墙虚拟系统&lt;/p&gt;
&lt;p&gt;​	将一台物理防火墙逻辑上虚拟为多台防火墙&lt;/p&gt;
&lt;p&gt;​	每台防火墙之间逻辑上隔离，管理平面隔离&lt;/p&gt;
&lt;p&gt;​	虚拟系统一般用于多租户场景，使用该技术实现每个租户单独维护和管理一个虚拟系统&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vsys enable &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;resource-class abc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; resource-item-limit session reserved-number 10 maximum 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; resource-item-limit policy reserved-number 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; resource-item-limit user reserved-number 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vsys name A  //创建虚拟系统&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; assign interface GigabitEthernet1/0/0 //关联接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; assign interface GigabitEthernet1/0/2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; assign resource-class abc //关联资源类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.为虚拟系统创建管理员&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Switch vsys A &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aaa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;manager-user-A@@A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;password cipher admin@123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service-type web&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;level 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;创建虚拟系统管理员于虚拟系统配置IP，路由，安全策略，NAT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;switch vsys A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.虚拟系统之间互访&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.1创建VLF区域&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;firewall zone name VIF id 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; set priority 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; add interface Virtual-if1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rule name T_VLF //创建安全策略t访问VLF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  source-zone trust&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination-zone VIF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  action permit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.2配置虚拟系统之间访问的路由&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.3配置虚拟地址之间的安全策略&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;VPN 概述：&lt;/p&gt;
&lt;p&gt;​	二级 ISP 搭建 VPN 网络：MPLS VPN&lt;/p&gt;
&lt;p&gt;​	企业自建 VPN 网络：IPSec，L2TP ,GRE,SSL&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;VPN 定义：&lt;/p&gt;
&lt;p&gt;​	再 ISP 基础上构建一条逻辑上的专线（隧道）&lt;/p&gt;
&lt;p&gt;VPN 分类：&lt;/p&gt;
&lt;p&gt;​	按照业务类型&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Accsee VPN/Client-LAN VPN&lt;/p&gt;
&lt;p&gt;适用于远程办公，居家办公接入公司内网的场景&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LAN-LAN VPN&lt;/p&gt;
&lt;p&gt;一个局域网通过 VPN 接入到另一个局域网&lt;/p&gt;
&lt;p&gt;适用于总部分支通信的场景&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	按网络层次：&lt;/p&gt;
&lt;p&gt;​	应用层： SSL VPN&lt;/p&gt;
&lt;p&gt;​	网络层：IPSec VPN ,GRE VPN&lt;/p&gt;
&lt;p&gt;​	网络接口层 ： L2TP&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;隧道协议&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;保护范围&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;使用场景&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;用户身份认证&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;加密和验证&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GRE&lt;/td&gt;
&lt;td&gt;IP 层及以上数据&lt;/td&gt;
&lt;td&gt;Intranet VPN&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;td&gt;支持简单的关键字验证、校验&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;L2TP&lt;/td&gt;
&lt;td&gt;IP 层及以上数据&lt;/td&gt;
&lt;td&gt;Access VPN         Extranet VPN&lt;/td&gt;
&lt;td&gt;支持基于 PPP 的 CHAP、PAP、EAP 认证&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IPSec&lt;/td&gt;
&lt;td&gt;IP 层及以上数据&lt;/td&gt;
&lt;td&gt;Intranet VPN             Access VPN                                                                 Extranet VPN&lt;/td&gt;
&lt;td&gt;支持预共享密钥或证书认证、支持 IKEv2 的 EAP 认证&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SSL VPN&lt;/td&gt;
&lt;td&gt;应用层特定数据&lt;/td&gt;
&lt;td&gt;Access VPN&lt;/td&gt;
&lt;td&gt;支持多种身份认证&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;VPN 核心技术：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;隧道技术&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加解密技术&lt;/p&gt;
&lt;p&gt;​	古典加密学：算法保密，密钥保密&lt;/p&gt;
&lt;p&gt;​	近代加密学：算法公开，密钥保密&lt;/p&gt;
&lt;p&gt;​	现代加密学：算法公开，密钥公开&lt;/p&gt;
&lt;p&gt;主流的加解密算法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;对称加密算法&lt;/p&gt;
&lt;p&gt;缺陷：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;密钥传输存在风险&lt;/li&gt;
&lt;li&gt;密钥数量多，难以管理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcia-%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0%5Cassets%5C1676600668432.png&#34; alt=&#34;1676600668432&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;非对称加密算法&lt;/p&gt;
&lt;p&gt;维护两个密钥：公钥，私钥&lt;/p&gt;
&lt;p&gt;公钥公开，私钥保密&lt;/p&gt;
&lt;p&gt;使用公钥加密，只能使用私钥解密：数据加解密&lt;/p&gt;
&lt;p&gt;使用私钥加密，只能使用公钥解码：数字签名&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcia-%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0%5Cassets%5C1676601799431.png&#34; alt=&#34;1676601799431&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	数据加解密场景：&lt;/p&gt;
&lt;p&gt;​	数据加解密时，使用对称加密算法&lt;/p&gt;
&lt;p&gt;​	传输对称加密算法的密钥时，使用非对称加密算法进行加密传递&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;身份认证技术：&lt;/p&gt;
&lt;p&gt;数字证书：&lt;/p&gt;
&lt;p&gt;被颁发者的身份信息&lt;/p&gt;
&lt;p&gt;被颁发者的公钥信息&lt;/p&gt;
&lt;p&gt;颁发者的身份信息&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据传输安全案例:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A 的原始信息通过 HASH 算法形成&lt;strong&gt;信息摘要&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;然后用 A 自己的私钥和信息摘要形成&lt;strong&gt;数字签名&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;然后用 A 和 B 之间的&lt;strong&gt;对称加密密钥&lt;/strong&gt;进行对 A 的原始信息，数字签名，A 的证书 加密形成&lt;strong&gt;加密信息&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;然后用 B 的公钥对称加密形成&lt;strong&gt;密钥信封&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;然后 B 收到后密钥信封后用 B 的私钥对称解密得到 对称加密密钥&lt;/li&gt;
&lt;li&gt;然后 B 用对称加密密钥 对加密信息进行解密 得到原始信息，数字签名，A 的证书&lt;/li&gt;
&lt;li&gt;从 A 的证书中得到 A 的公钥&lt;/li&gt;
&lt;li&gt;然后 B 用 A 的公钥验证数字签名 得到信息摘要&lt;/li&gt;
&lt;li&gt;B 对原始信息进行 HASH 算法形成信息摘要&lt;/li&gt;
&lt;li&gt;进行对比&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;IPSec VPN&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 企业自建VPN 
2. IPSec开发协议簇，包含AH协议,ESP协议，IKE协议
3. IPSec支持IPv4和IPv6
4. IPSec属于网络层VPN ,通过隧道封装（插入新头部）保护网络层及以上的数据部分
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;IPSec 工作模式:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;传输模式&lt;/p&gt;
&lt;p&gt;​	使用于主机和主机之间端到端通信保护&lt;/p&gt;
&lt;p&gt;​	隧道封装：在原始数据包 IP 头部后插入 IPSec 头部&lt;/p&gt;
&lt;p&gt;​	原始数据包：IP 头 	Data&lt;/p&gt;
&lt;p&gt;​	隧道封装后：IP 头	IPSec	Data&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;隧道模式&lt;/p&gt;
&lt;p&gt;​	适用于私网和私网之间通信保护&lt;/p&gt;
&lt;p&gt;​	隧道封装：在原始数据包前新增新的 IP 头和 IPSec 头部&lt;/p&gt;
&lt;p&gt;​	原始数据包：IP 头	Data&lt;/p&gt;
&lt;p&gt;​	隧道封装后：新 IP 头	IPSec 	IP 头	Data&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通信保护协议&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;AH 协议 鉴别头协议 / 认证报头协议 50&lt;/p&gt;
&lt;p&gt;安全功能：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 1. 完整性校验：哈希算法计算摘要值
 2. 数据源鉴别：共享密钥
 3. 防重放攻击：序列号
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;AH 协议在传输模式下封装：&lt;/p&gt;
&lt;p&gt;​	原始数据包：IP 头 	Data&lt;/p&gt;
&lt;p&gt;​	对整个数据包进行 hash 计算，摘要值填充到 AH 头部中&lt;/p&gt;
&lt;p&gt;​	隧道封装后：IP 头 	AH 头	Data&lt;/p&gt;
&lt;p&gt;AH 在隧道模式下封装：&lt;/p&gt;
&lt;p&gt;​	原始数据包：IP 头	Data&lt;/p&gt;
&lt;p&gt;​	添加新 IP 头：新 IP 头	IP 头	data&lt;/p&gt;
&lt;p&gt;​	对整个数据包进行 hash 计算，包含新的 IP 头&lt;/p&gt;
&lt;p&gt;​	隧道封装后：新 IP 头	AH 头	原始 IP 头	Data&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AH 协议在进行完整性计算时，包含了最外层 IP&lt;/strong&gt; 头部（）整个数据包&lt;/p&gt;
&lt;p&gt;2.ESP 协议 封装安全净载协议 50&lt;/p&gt;
&lt;p&gt;​	安全功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;完整性校验&lt;/li&gt;
&lt;li&gt;数据源鉴别&lt;/li&gt;
&lt;li&gt;防重传攻击&lt;/li&gt;
&lt;li&gt;数据加解密&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ESP 在传输模式下封装：&lt;/p&gt;
&lt;p&gt;​	原始数据包：IP 头	Data&lt;/p&gt;
&lt;p&gt;​	隧道封装后：IP 头	IPSec 头	Data	IPSec 尾部&lt;/p&gt;
&lt;p&gt;​	对 Data 和 IPSec 尾部进行加密：IP 头部	IPsec 头 	加密（Data ipsec 尾部）&lt;/p&gt;
&lt;p&gt;​	对 IPsec 头部和加密部分进行校验：IP 头	IPsec 头	加密	IPSec 认证&lt;/p&gt;
&lt;p&gt;ESP 在隧道模式下封装：&lt;/p&gt;
&lt;p&gt;​	原始数据包：IP 头	Data&lt;/p&gt;
&lt;p&gt;​	隧道封装后：新的 IP 头	IPsec 头	ip 头	data	ipsec 尾部&lt;/p&gt;
&lt;p&gt;​	对原始整个数据包和尾部进行加密：新 ip 头	IPsec 头	加密（IP 头	Data	IPsec 尾部）&lt;/p&gt;
&lt;p&gt;​	对 IPsec 头部和加密部分进行校验：新 IP 头	IPsec 头	加密	IPSec 认证&lt;/p&gt;
&lt;p&gt;ESP 加密部分：&lt;/p&gt;
&lt;p&gt;传输模式，加密 Data IPSec 尾部&lt;/p&gt;
&lt;p&gt;隧道模式，加密整个原始数据包和 IPsec 尾部&lt;/p&gt;
&lt;p&gt;ESP 校验部分：&lt;/p&gt;
&lt;p&gt;传输模式，校验 ESP 头部和加密数据（Data IPSEC 尾部）&lt;/p&gt;
&lt;p&gt;隧道模式，校验 ESP 头部和加密部分（原始数据包，IPsec 尾部）&lt;/p&gt;
&lt;p&gt;ESP 校验不包含最外层 IP 头&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;安全特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;AH&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;ESP&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;协议号&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;数据完整性校验&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持（不验证 IP 头）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;数据源验证&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;数据加解密&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;抗重放服务&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NAT-T&lt;/strong&gt;**（&lt;strong&gt;&lt;strong&gt;NAT&lt;/strong&gt;&lt;/strong&gt; 穿越）**&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;IPsec 建立：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;建立 IPsec 安全联盟&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;手工建立安全联盟&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IKE 协议动态建立安全联盟&lt;/p&gt;
&lt;p&gt;IKE 工作工程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;建立 IKE SA：建立临时的经过身份认证的保密的通道&lt;/p&gt;
&lt;p&gt;ipsec 的 ike 协商用端口 udp500 和 udp4500&lt;/p&gt;
&lt;p&gt;​	核心任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;协商 IKE SA 参数&lt;/li&gt;
&lt;li&gt;密钥交换&lt;/li&gt;
&lt;li&gt;身份认证&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	主模式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用出口地址作为身份标识&lt;/li&gt;
&lt;li&gt;交互 6 个消息，后两个消息被保护&lt;/li&gt;
&lt;li&gt;身份认证过程被加密保护&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	野蛮模式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用用户名字符串，IP 地址等作为身份标识&lt;/li&gt;
&lt;li&gt;交互三个消息，只有最后一个消息被保护&lt;/li&gt;
&lt;li&gt;不保护对端的身份标识&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立 IPSec SA  ：建立 IPsec 数据保护的真正通道&lt;/p&gt;
&lt;p&gt;核心：协商 IPsec 安全参数&lt;/p&gt;
&lt;p&gt;​	加密算法&lt;br&gt;
​	Hash 算法&lt;br&gt;
​	安全协议&lt;br&gt;
​	工作模式&lt;br&gt;
​	存活时间&lt;/p&gt;
&lt;p&gt;模式：快速模式&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;主模式&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;野蛮模式&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;消息交互&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;交互 6 个消息&lt;/td&gt;
&lt;td&gt;交互 3 个消息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;身份 ****ID&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;以 IP 地址作为身份 ID，自动生成本端身份 ID 和对端身份 ID&lt;/td&gt;
&lt;td&gt;可以以多种形式（IP，字符串等）手动或自动的生成本端和对端的身份 ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;预共享密钥&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;只能基于 IP 地址来确定预共享密钥。&lt;/td&gt;
&lt;td&gt;基于 ID 信息（主机名和 IP 地址）来确定预共享密钥。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;安全性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;较高&lt;/strong&gt;前 4 个消息以明文传输，最后两个消息加密，对对端身份进行了保护&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;较低&lt;/strong&gt;前两个消息以明文传输，最后一个消息进行加密，不保护对端身份&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;速度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;较慢&lt;/td&gt;
&lt;td&gt;较快&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IPsec 数据传输&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SA 安全联盟：&lt;/p&gt;
&lt;p&gt;​	vpn 网关设备之间参数约定&lt;/p&gt;
&lt;p&gt;​	SA 由三元组唯一标识：安全参数索引（SPI） 目的 IP 地址	安全协议号&lt;/p&gt;
&lt;p&gt;NAT-T 场景下：&lt;/p&gt;
&lt;p&gt;​	IPsec VPN：&lt;/p&gt;
&lt;p&gt;​	隧道模式，ESP 协议，野蛮模式&lt;/p&gt;
</content>
        <updated>2023-02-20T00:54:39.606Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/01/24/2022.12.9/</id>
        <title>HCIP(十八） 2022.12.9</title>
        <link rel="alternate" href="http://example.com/2023/01/24/2022.12.9/"/>
        <content type="html">&lt;h4 id=&#34;bfd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bfd&#34;&gt;#&lt;/a&gt; BFD：&lt;/h4&gt;
&lt;p&gt;​	双向转发检测，是一个介质无关，协议无关的故障检测协议，应用广泛，能够再毫秒级别感应到网络故障问题&lt;/p&gt;
&lt;p&gt;注：BFD 通过在设备之间建立会话，互相交互 BFD 报文来检测两者之间的连通性问题&lt;/p&gt;
&lt;h5 id=&#34;bfd会话建立方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bfd会话建立方式&#34;&gt;#&lt;/a&gt; BFD 会话建立方式：&lt;/h5&gt;
&lt;p&gt;​	静态建立 BFD 会话：管理员手工配置本地标识符和远端标识符（标识符用于区分本地会话）&lt;/p&gt;
&lt;p&gt;​	动态建立 BFD 会话：标识符由系统自动分配&lt;/p&gt;
&lt;h5 id=&#34;bfd的状态变化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bfd的状态变化&#34;&gt;#&lt;/a&gt; BFD 的状态变化：&lt;/h5&gt;
&lt;p&gt;​	Down：建立 BFD 会话的初始状态 / 会话 Down&lt;/p&gt;
&lt;p&gt;​	init：处于 Down 状态时收到了 Down 状态 BFD 报文进入 init 状态&lt;/p&gt;
&lt;p&gt;​	UP：处于 init 状态时收到了 init/UP 状态的报文进入 UP 状态，表示 BFD 会话建立完成&lt;/p&gt;
&lt;p&gt;​	AdminDown：管理员 Down，由管理员手工将会话 Down，不是因为网络故障&lt;/p&gt;
&lt;p&gt;注：在任何一个状态，只要会话超时就会回到 Down 状态，此时认为网络故障&lt;/p&gt;
&lt;h5 id=&#34;bfd的检测模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bfd的检测模式&#34;&gt;#&lt;/a&gt; BFD 的检测模式：&lt;/h5&gt;
&lt;p&gt;​	异步模式：两个设备都支持 BFD，互相交互 BFD 报文，设备通过是否能够接收到对端发送的 BFD 报文来判断会话连接状态（连通性）&lt;/p&gt;
&lt;p&gt;​	查询模式：只有一端开启 / 支持 BFD，通过是否能够接收到自己发送出去的 BFD 报文判断连通性&lt;/p&gt;
&lt;h5 id=&#34;bfd检测时间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bfd检测时间&#34;&gt;#&lt;/a&gt; BFD 检测时间：&lt;/h5&gt;
&lt;p&gt;​	TX：发送时间间隔&lt;/p&gt;
&lt;p&gt;​	RX：接收时间间隔&lt;/p&gt;
&lt;p&gt;​	DM：检测倍数&lt;/p&gt;
&lt;p&gt;​	设备实际发送时间间隔 = MAX (本地配置发送时间间隔，对端配置接收时间间隔)&lt;/p&gt;
&lt;p&gt;​	设备实际接收时间间隔 = MAX (对端配置发送时间间隔，本地配置接收时间间隔)&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h6 id=&#34;实际检测时间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实际检测时间&#34;&gt;#&lt;/a&gt; 实际检测时间：&lt;/h6&gt;
&lt;p&gt;​	异步模式 = 设备实际接收时间间隔 * 对端配置检测倍数&lt;/p&gt;
&lt;p&gt;​	查询模式 = 设备实际接收时间间隔 * 本地配置检测倍数&lt;/p&gt;
&lt;p&gt;静态 BFD&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. bfd //开启BFD
2. bfd 1 bind peer-ip *  source-ip * //创建BFD会话
3. discriminator  local  *  //设置本地标识符
4. discriminator  remote  * //设置远端标识符
5. commit  //启动配置 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;动态 BFD&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;bfd // 开启 BFD&lt;/li&gt;
&lt;li&gt;bfd 1 bind peer-ip *  source-ip *  auto // 创建 BFD 会话&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;bfd-echo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bfd-echo&#34;&gt;#&lt;/a&gt; BFD Echo：&lt;/h5&gt;
&lt;p&gt;BFD 单臂回声，当进行 BDF 检测时，有一端不支持 BFD 功能，此时可以通过回声达到检测的目的（设备发送 BFD 报文封装源目 IP 地址都为自己的地址，对端接收到后根据目的 IP 转发回来）&lt;/p&gt;
&lt;p&gt;配置:&lt;/p&gt;
&lt;p&gt;​	bfd 1 bind peer-ip 10.1.12.2 interface g0/0/0 one-arm-echo&lt;/p&gt;
&lt;p&gt;​	discriminator local 100&lt;/p&gt;
&lt;p&gt;​	commit&lt;/p&gt;
&lt;h5 id=&#34;静态路由与bfd联动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#静态路由与bfd联动&#34;&gt;#&lt;/a&gt; 静态路由与 BFD 联动：&lt;/h5&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;1. 建立静态路由的主备份路径：&lt;/p&gt;
&lt;p&gt;（r1）ip route-static 10.1.45.0 255.255.255.0 10.1.34.4&lt;br&gt;
（r3）ip route-static 10.1.45.0 255.255.255.0 10.1.35.5 preference 70&lt;/p&gt;
&lt;p&gt;2. 在静态主路径上与 BFD 进行联动&lt;/p&gt;
&lt;p&gt;（r1）bfd 1 bind peer-ip 10.1.34.4 source-ip 10.1.34.3 auto&lt;/p&gt;
&lt;p&gt;（r2）bfd 1 bind peer-ip 10.1.34.3 source-ip 10.1.34.4 auto&lt;/p&gt;
&lt;p&gt;3. 将静态主路径上与 BFD 进行联动&lt;/p&gt;
&lt;p&gt;（r1）ip route-static 10.1.45.0 255.255.255.0 10.1.34.4 track bfd-session 1&lt;/p&gt;
&lt;p&gt;修改 BFD 时间间隔：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;detect-multiplier 5 // 修改检测倍数&lt;/li&gt;
&lt;li&gt;min-tx-interval 500 // 修改发送报文时间&lt;/li&gt;
&lt;li&gt;min-rx-interval 500 // 修改接收报文时间&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;ospf与bfd联动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ospf与bfd联动&#34;&gt;#&lt;/a&gt; OSPF 与 BFD 联动&lt;/h5&gt;
&lt;p&gt;在 OSPF 进程下：&lt;/p&gt;
&lt;p&gt;bfd all-interfaces enable  // 开启所有 OSPF 接口的 BFD 检测功能&lt;/p&gt;
&lt;p&gt;bfd all-interfaces min-tx-interval&lt;/p&gt;
&lt;p&gt;bfd all-interfaces min-rx-interval&lt;/p&gt;
&lt;p&gt;bfd all-interfaces  detect-multiplier&lt;/p&gt;
</content>
        <updated>2023-01-24T04:30:55.844Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/01/24/2022.12.8/</id>
        <title>HCIP(十七） 2022.12.8</title>
        <link rel="alternate" href="http://example.com/2023/01/24/2022.12.8/"/>
        <content type="html">&lt;h5 id=&#34;pim-sm&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pim-sm&#34;&gt;#&lt;/a&gt; PIM SM：&lt;/h5&gt;
&lt;p&gt;​	PIM Sparse Mode，稀疏模式，PIM SM 认为网络中不存在一个接收者，采用拉（pull）的形式&lt;/p&gt;
&lt;h6 id=&#34;组播分发树&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#组播分发树&#34;&gt;#&lt;/a&gt; 组播分发树：&lt;/h6&gt;
&lt;p&gt;​	SPT：最短路径树，通过（S,G）表项构建&lt;/p&gt;
&lt;p&gt;​	RPT：共享树（汇聚点树），通过（*，G）表项构建&lt;/p&gt;
&lt;p&gt;注：RP：汇聚点，类似信息汇聚中心，拥有所有组播源和组播组接收者的信息，所有组播路由都知道 RP 的位置，可以静态指定，也可以动态选举&lt;/p&gt;
&lt;p&gt;组播源侧 DR：负责向 RP 发送单播注册消息&lt;/p&gt;
&lt;p&gt;接收者侧 DR：负责向 RP 发送 Join 加入消息（查询器角色）&lt;/p&gt;
&lt;p&gt;DR 选举与 PIM DM 相同&lt;/p&gt;
&lt;p&gt;**PIM-SM(ASM)**&lt;strong&gt; 协议报文&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;报文类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;报文功能&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Hello&lt;/td&gt;
&lt;td&gt;用于 PIM 邻居发现，协议参数协商，PIM 邻居关系维护等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Register（注册）&lt;/td&gt;
&lt;td&gt;用于事先源的注册过程。这是一种单播报文，在源的注册过程中，组播数据被第一跳路由器封装在单播注册报文中发往 RP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Register-Stop（注册停止）&lt;/td&gt;
&lt;td&gt;RP 使用该报文通知第一跳路由器停止通过注册报文发送组播流量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Join/Prune（加入 / 剪枝）&lt;/td&gt;
&lt;td&gt;加入报文用于加入组播分发树，剪枝则用于修剪组播分发树&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Assert（断言）&lt;/td&gt;
&lt;td&gt;用于断言机制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bootstrap（自举）&lt;/td&gt;
&lt;td&gt;用于 BSR 选举。另外 BSR 也使用该报文向网络中扩散 C-RP（Candidate-RP，候选 RP）的汇总信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Candidate-RP-Advertisement   （候选 RP 通告）&lt;/td&gt;
&lt;td&gt;C-RP 使用该报文向 BSR 发送通告，报文中包含该 C-RP 的 IP 地址及优先级等信息&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h6 id=&#34;pim-sm-再asm模型下的工作过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pim-sm-再asm模型下的工作过程&#34;&gt;#&lt;/a&gt; PIM SM 再 ASM 模型下的工作过程：&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;接收者侧 DR 通过和接收者之间运行 IGMP 协议可以得知有哪些组播组的接收者，然后主动朝着 RP 的方向发送 Join 加入报文，沿途所有路由器都会形成（*，G）表项，并且将收到 Join 加入报文的端口作为下游端口，一直到 RP 构建 RPT&lt;/li&gt;
&lt;li&gt;组播源侧 DR 在收到第一个组播报文时，会将组播报文封装为单播注册报文发送给 RP，RP 收到注册报文后，通过注册报文中的组播数据找到组播源和组播组信息，然后反向发送 Join 加入消息，沿途所有路由器形成（S,G）表项，并将收到 JOIN 报文的端口作为下游接口，直到组播源构建 SPT ,&lt;/li&gt;
&lt;li&gt;由于组播源侧 DR 形成（S,G）表项后组播数据可以转发，注册报文又会单播发送，造成重复数据的问题，此时 RP 会再向组播源册 DR 发送注册停止报文（Rejister-stop），组播源侧 DR 收到停止报文后不再发送注册报文，组播数据正常转发&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注 SPT 和 RPT 树构建完成后，组播数据首先没有沿着 SPT 树转发至 RP，再沿着 RPT 树转发至接收者&lt;/p&gt;
&lt;h6 id=&#34;spt切换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#spt切换&#34;&gt;#&lt;/a&gt; SPT 切换：&lt;/h6&gt;
&lt;p&gt;​	当组播接收者侧 DR 收到的组播数据不是最优的，触发切换 SPT，通过组播数据中携带的组播源信息，反向朝着组播源的方向发送 Join 加入消息，构建 SPT 树，沿途所有路由器形成（S,G）表项，并将收到报文的端口作为下游接口，之后的组播数据可以沿着新构建的 SPT 转发，组播源侧 DR 会向原先构建的 RPT 剪枝（向 RP 剪枝），为了维持 SPT 和剪枝状态，接收者侧 DR 会周期性 60s 发送 Join 加入报文和 Prune 剪枝报文（如果是共享网段也会触发断言机制竞选，避免重复数据）&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h6 id=&#34;pim-sm-再ssm模型下的工作过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pim-sm-再ssm模型下的工作过程&#34;&gt;#&lt;/a&gt; PIM SM 再 SSM 模型下的工作过程：&lt;/h6&gt;
&lt;p&gt;​	对于成员端 DR 来说，与接收者之间运行了 IGMPv3，能够得知接收者需要哪些组播源的组播数据，可以主动向组播源的方向发送 join 加入报文，反向建立 SPT，沿途所有路由器生成 (S,G) 表项，并将收到 Join 报文的端口作为下游接口，直到源端 DR，后续的组播数据都沿着 SPT 转发至接收者&lt;/p&gt;
&lt;p&gt;注：SSM 模型下，不需要 RP，无需构建 RPT 以及注册源&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1670469599101.png&#34; alt=&#34;1670469599101&#34;&gt;&lt;/p&gt;
</content>
        <updated>2023-01-24T04:30:55.842Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/01/24/2022.12.16/</id>
        <title>HCIP(二十三) 2022.12.16</title>
        <link rel="alternate" href="http://example.com/2023/01/24/2022.12.16/"/>
        <content type="html">&lt;h4 id=&#34;mpls-vpn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mpls-vpn&#34;&gt;#&lt;/a&gt; MPLS VPN :&lt;/h4&gt;
&lt;p&gt;​	VPN：&lt;/p&gt;
&lt;p&gt;虚拟专用网络&lt;/p&gt;
&lt;h5 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. 直接通过公网通信安全性过低
2. 搭建物理专线安全性高，但是成本也相应增多
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;PE：运营商边缘设备&lt;/p&gt;
&lt;p&gt;P：运营商核心设备&lt;/p&gt;
&lt;p&gt;CE：用户边缘设备&lt;/p&gt;
&lt;h5 id=&#34;vpf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vpf&#34;&gt;#&lt;/a&gt; VPF:&lt;/h5&gt;
&lt;p&gt;虚拟路由转发，类似虚拟路由表，用于 PE 本地区分不同客户的路由（不同客户可能存在地址空间重叠的问题），只在本地有效&lt;/p&gt;
&lt;h5 id=&#34;rd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rd&#34;&gt;#&lt;/a&gt; RD：&lt;/h5&gt;
&lt;p&gt;路由标识符，8 字节，用于 PE 之间传递路由时进行区分，普通的 IPv4 路由加上 RD 值后就是 VPN-IPv4 路由，简称 VPNv4 路由，长 12 字节&lt;/p&gt;
&lt;h5 id=&#34;rt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rt&#34;&gt;#&lt;/a&gt; RT:&lt;/h5&gt;
&lt;p&gt;分为 Export-RT 和 Import-RT（出方向 RT 和入方向 RT），出方向 RT 值作为 MP-BGP 的扩展团体属性携带在路由中，入方向 RT 值用于检查收到的路由是否可以接收&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：MP-BGP：BGP 的多协议扩展，普通的 BGP-4 无法传递 VPNv4 路由，需要使能地址族 VPNv4 功能，也就是 MP-BGP，使其能够传递 VPNv4 路由&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;vpn的路由传递&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vpn的路由传递&#34;&gt;#&lt;/a&gt; VPN 的路由传递：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. 本端CE——&amp;gt;本端PE: 通过路由协议
2. 本端PE——&amp;gt;对端PE：通过MP-BGP
3. 对端PE——&amp;gt;对端CE：同上
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;vpn的报文转发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vpn的报文转发&#34;&gt;#&lt;/a&gt; VPN 的报文转发：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. 数据从PE设备转发至P设备时，P设备没有路由无法转发，需要在公网设置LDP隧道，分配公网标签
2. 数据从PE1-PE2时，PE无法判断查找那个路由表，需要MP-BGP 为私网路由分配私网标签进行区分
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1671180735844.png&#34; alt=&#34;1671180735844&#34;&gt;&lt;/p&gt;
&lt;p&gt;VPN 路由的传递过程：&lt;/p&gt;
&lt;p&gt;CE1——PE1——P——PE2——CE2&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CE1-PE1 之间运行了路由协议，并且 PE1 运行协议时绑定了 VPN 实例，所以 CE1 的路由可以传递到 PE1 的 VRF 中&lt;/li&gt;
&lt;li&gt;PE1 与 PE2 之间建立了 MP-BGP 的 IBGP 对等体关系，将 CE1-PE1 之间的路由协议引入 BGP 中，PE2 就可以学习到 CE1 的路由，并且携带了出方向的 RT 值（作为 BGP 的扩展团体属性），MP-BGP 为该路由分配了一个私网标签（发布给 PE2 作为出标签）&lt;/li&gt;
&lt;li&gt;PE2-CE2 之间也运行了路由协议，将 BGP 引入 PE2-CE2 路由协议中，CE2 就可以学习到 CE1 的路由&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据转发过程：&lt;/p&gt;
&lt;p&gt;CE2———&amp;gt;CE1&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CE2 想要访问 CE1, 封装数据查找 FIB，下一跳为 PE2, 将数据发送给 PE2&lt;/li&gt;
&lt;li&gt;PE2 收到数据后通过查找 CE2 对应的 VRF 转发表，发现去往 CE2 需要进行标签转发，加上一个私网标签，然后去往 CE1 的下一跳为 PE1, 非直连，再查找去往 PE1 的转发表，发现又需要进行标签转发，加上一层公网标签，从对应的接口发送给下一跳设备（P 设备）&lt;/li&gt;
&lt;li&gt;P 设备收到数据后，看到最外层的公网标签，根据入标签找到对应的出标签，执行交换标签的动作（公网标签），从对应的接口发送给下一跳&lt;/li&gt;
&lt;li&gt;PE1 收到数据后，外层公网标签没有对应的出标签，拆掉公网标签，查看内层私网标签，发现是给 CE1 路由分配的，没有对应的出标签，拆掉私网标签，查找 CE1 对应的 VRF1 转发表，发送给 CE1 设备&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;vpn组网&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vpn组网&#34;&gt;#&lt;/a&gt; VPN 组网：&lt;/h4&gt;
&lt;p&gt;​	Intranet：相同 VPN 用户之间互访，不同 VPN 用户相互隔离&lt;/p&gt;
&lt;p&gt;​	Extranet：一个 VPN 用户可以与不同 VPN 用户互访&lt;/p&gt;
&lt;p&gt;​	Hub-Spoke：Spoke 之间访问需要通过 Hub（例如分公司之间通信经过总公司）&lt;/p&gt;
&lt;p&gt;CE1(AS100)——PE1—P—PE2(AS 123)——CE2(AS 100)&lt;/p&gt;
&lt;p&gt;CE1 和 CE2 属于同一个 VPN 用户，AS 号相同，当 PE-CE 之间运行的都是 BGP 协议时，PE 将路由传递给 CE 设备，会由于 AS_Path 中包含自身 AS 号不接收 VPN 路由，导致路由传递失败&lt;/p&gt;
&lt;p&gt;注：开启 PE 设备上针对对等体的 AS 号替换功能，将其中的 AS 号替换为本地 AS 号（原本 PE 传递的路由 AS_Path 为 123，100；替换后为 123，123）&lt;/p&gt;
&lt;p&gt;So0 属性：&lt;/p&gt;
&lt;p&gt;​	开启 PE 设备的 AS 号替换功能后，在一些特殊场景下可能会导致路由环路（一个 PE 连接了同一个站点的多个 CE, 并且都建立 EBGP）, 此时可以设置 PE 针对这两个 CE 的相同 So0 值，当 PE 从 CE1 学习到路由后，给路由加上设置的 So0 属性，再传递给另一个 CE 时检查路由携带的 So0 属性与要传递 CE 设置的 So0 属性是否一致，一致则不传递&lt;/p&gt;
&lt;p&gt;DomainID，Route Type ：通过 BGP 的扩展团体属性携带，两端 CE-PE 都运行 OSPF 时，如果接收到的路由 DomianID 与本地一致，表示属于同一个 OSPF 域，原本的 Route Type 为 1，2，3——3 ，原本 5，7—5，7；如果 DomianID 不一致，原本 1，2，3，5，7——5，7&lt;/p&gt;
&lt;p&gt;Type-3 防环：PE 将路由传递给 OSPF 实例邻居时，将 LSA 中 Option 的 DN 为置位 1，其他 PE 设备收到 DN 置位 1 的路由不进行计算&lt;/p&gt;
&lt;p&gt;Type-5/7 防环：PE 在将路由传递给 OSPF 实例邻居时 LSA 中携带 Route Tag（默认为本地 AS 计算得出）, 其他 PE 收到 Route Tag 数值与本地计算得出的一致则不进行计算&lt;/p&gt;
&lt;p&gt;后门链路：在两端 CE 之间建立后门链路作为 VPN 备份，互相传递路由，如果 CE-PE 协议为 OSPF , 导致后门链路传递的路由为 OSPF 域内路由，VPN 传递的为域间路由（type3），后门链路会被优选，没有达到作为备份的目的&lt;/p&gt;
&lt;p&gt;Sham Link：在 PE 设备之间建立一条伪链路，使 VPN 传递的路由也成为 OSPF 域内，再将后门链路的开销设置比 Sham link 大，则可以使后门链路成为备份链路&lt;/p&gt;
&lt;p&gt;ISIS 快速收敛；&lt;/p&gt;
&lt;p&gt;​	I-SPF; 增量最短路劲优先算法，只计算发送变化的节点信息&lt;/p&gt;
&lt;p&gt;​	ISIS 的分片扩展，正常情况下，一个 ISIS 路由器的 LSP 可以最多生成 256 个分片携带信息，可以携带的数据有限&lt;/p&gt;
&lt;p&gt;​	分片扩展，一个 ISIS 设备可以设置多个虚拟路由器（最多 50 个），每一个虚拟路由器可以产生自己的 LSP（可以携带 256 个分片），所以扩展后可携带分片数为 50*256 个&lt;/p&gt;
&lt;p&gt;​	初始系统，物理路由器&lt;/p&gt;
&lt;p&gt;​	系统 ID，物理路由器的系统 ID&lt;/p&gt;
&lt;p&gt;​	虚拟系统，虚拟路由器&lt;/p&gt;
&lt;p&gt;​	附加系统 ID，虚拟路由器的系统 ID&lt;/p&gt;
&lt;p&gt;​	分配扩展模式，&lt;/p&gt;
&lt;p&gt;​	Mode-1，邻居路由器不支持分片扩展，将虚拟系统作为真实设备和原设备分开进行计算&lt;/p&gt;
&lt;p&gt;​	Mode-2，邻居路由器支持分片扩展，能够得知虚拟系统的初始系统是原设备，将数据集中统一计算&lt;/p&gt;
&lt;p&gt;BGP 高级特性，&lt;/p&gt;
&lt;p&gt;​	路由控制，&lt;/p&gt;
&lt;p&gt;​	正则表达式，（特殊字符含义）&lt;/p&gt;
&lt;p&gt;​	AS-path Filter，路劲信息过滤器，针对 BGP 路由中携带了 AS_Path 属性对路由进行控制，AS_PATH Filter 可以通过正则表达式匹配路由 AS_Path 字符串）&lt;/p&gt;
&lt;p&gt;例如 10.1.1.1/32 携带 AS_Path 103 102 101&lt;/p&gt;
&lt;p&gt;​	通过 AS_Path Filter 匹配时，&lt;/p&gt;
&lt;p&gt;​	IP AS_Path Filter 1 permit /deny ^103/101$ 等&lt;/p&gt;
&lt;p&gt;注 AS_Path Filter 可以直接针对对等体应用，也可以结合 ROuter-POlicy 使用&lt;/p&gt;
&lt;p&gt;​	Community Filter，团体属性过滤器，针对 BGP 路由中携带的团体属性进行控制&lt;/p&gt;
&lt;p&gt;​	分类，&lt;/p&gt;
&lt;p&gt;​	基本 Community Filter ，编号 1-99，可以匹配路由中的团体号 / 公认团体属性（传递范围）&lt;/p&gt;
&lt;p&gt;​	高级 Community Filter， 编号 100-199，可以通过正则表达式对路由的团体属性进行匹配&lt;/p&gt;
&lt;p&gt;​	注 BGP 路由器默认不向对等体通过团体属性，可以通过 Peer 对等体 IP Advertise-Community 命令开启&lt;/p&gt;
&lt;p&gt;结合 ROute-policy 使用&lt;/p&gt;
&lt;p&gt;BGP 其他特性，&lt;/p&gt;
&lt;p&gt;​	ORF，出口路由过滤器，BGP 设备只期望接收对等体发送自己某些路由，可以配置策略，然后通过 ORF 报文发送给对等体，对等体接收到 ORF 报文后策略只发布满足条件的路由&lt;/p&gt;
&lt;p&gt;​	对等体组，将某些具有相同特性的对等体放入同一个对等体组，然后通过对对等体配置相关参数生效于对等体组内的对等体设备&lt;/p&gt;
&lt;p&gt;​	分为 External 和 Internal ，External 表示 EBGP 对等体组，Internal 表示 IBGP 对等体组&lt;/p&gt;
&lt;p&gt;​	例如，group 1 External // 创建 EBGP 对等体组 1&lt;/p&gt;
&lt;p&gt;​	group 2 Internal // 创建 IBGP 对等体组 2&lt;/p&gt;
&lt;p&gt;​	peer 对等体 group 1 // 加入组 1 为 EBGP 对等体&lt;/p&gt;
&lt;p&gt;​	Peer 对等体 group 2 // 加入组 2 为 IBGP 对等体&lt;/p&gt;
&lt;p&gt;注 由于 IBGP 对等体组 AS 号与本地相同，所以对等体 AS 号直接生成，EBGP 对等体 AS 号未知，需要指定 AS 号，peer 1 as-number * //1 为 EBGP 对等体组号&lt;/p&gt;
&lt;p&gt;peer 2 connect loopback 0 // 与对等体组 2 的所有设备用环回口建立关系、&lt;/p&gt;
&lt;p&gt;BGP 安全性，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 防止建立非法BGP对等体关系，bgp认证
2. 防止设备发送大量非法BGP报文占用CPU,GTSM
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;GTSM，通过 TTL 安全保护机制，通过设置与合法设备交互 BGP 报文的有效条数，决定收到的合法 BGP 报文的 TTL，如果收到的 BGP 报文在有效跳数内，正常接收，否则丢弃&lt;/p&gt;
&lt;p&gt;公式 ，TTL=(255-HOPS+1,255),HOPS 为设置的有效跳数&lt;/p&gt;
&lt;p&gt;路由反射器组网，&lt;/p&gt;
&lt;p&gt;​	备份 RR 组我，多个 RR 指定相同的 BGP 路由器作为自己的客户端，并且 RR 多设置相同的集群 ID&lt;/p&gt;
&lt;p&gt;​	多集群同级 RR 组网，所有路由器只作为 RR 身份&lt;/p&gt;
&lt;p&gt;​	多集群分级 RR 组网，路由器不仅作为 RR，还作为其他 RR 的客户端（只为 RR 为一级 RR, 作为一级 RR 的客户端身份的 RR 为二级 RR…）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1671610768740.png&#34; alt=&#34;1671610768740&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;vlan聚合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vlan聚合&#34;&gt;#&lt;/a&gt; VLAN 聚合：&lt;/h4&gt;
&lt;p&gt;传统 VLAN 划分如果想要实现 VLAN 间通信需要为每一个 VLAN 设置 VLANIF 逻辑接口，并为其设置 IP 地址，并且每一个 VLAN 都属于不同子网，会造成 IP 地址的浪费（一个 VLAN 至少有三个 IP 地址不能使用，VLANIF 地址，子网段网络地址和广播地址），通过 VLAN 聚合技术减少 IP 地址的浪费&lt;/p&gt;
&lt;h5 id=&#34;super-vlan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#super-vlan&#34;&gt;#&lt;/a&gt; Super VLAN ：&lt;/h5&gt;
&lt;p&gt;聚合 VLAN，只包含三层 VLANIF 逻辑接口，作为所有 Sub VLAN 内 PC 的网关，Sub VLAN 间通信通过 SuperVLAN&lt;/p&gt;
&lt;h5 id=&#34;sub-vlan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sub-vlan&#34;&gt;#&lt;/a&gt; Sub VLAN：&lt;/h5&gt;
&lt;p&gt;子 VLAN , 只包含二层物理接口，实现二层广播域的划分，相同 SubVLAN 内二层互通，不同 SubVLAN 二层互相隔离&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：一个 SuperVLAN 可以设置多个 SubVLAN，一个 SubVLAN 只能绑定一个 SuperVLAN，一个 SuperVlan 下的所有 SubVlan 属于同一个网段&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不同 SubVLAN 间通信：由于目的地与自身处于相同网段，所以直接发送 ARP 广播请求报文，SuperVLAN 也能收到，开启 SuperVLAN 的 SubVLAN 间代理功能后，SuperVLAN 会将收到的广播 ARP 会发送给所有的 SubVLAN，目的设备也能收到，收到后回复 ARP 响应，至此达到通信的目的&lt;/p&gt;
&lt;p&gt;Subvlan 内设备与其他 VLAN（不属于 SubVLAN）设备二层通信：正常发送数据，由于 SuperVLAN 不包含物理接口，所以数据所携带的标签不会发生变化，可与其他相同 VLANTag 的 PC 直接通信&lt;/p&gt;
&lt;p&gt;二层通信：通过 SuperVLAN 进行三层路由互通&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1671677451957.png&#34; alt=&#34;1671677451957&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;mux-vlan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mux-vlan&#34;&gt;#&lt;/a&gt; Mux VLAN：&lt;/h5&gt;
&lt;p&gt;分为主 VLAN，从 VLAN，主 Vlan 唯一并且可以与所有从 VLAN 通信，从 VLAN 分为互通型从 VLAN 和隔离型从 VLAN&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;主 VLAN&lt;/strong&gt;：PrincipalVLAN, 在一个 MuxVLAN 中只会有一个，并且主 VLAN 下的设备可以与 Muxvlan 内所有设备互通&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;互通型从 VLAN&lt;/strong&gt;：GroupVLAN, 属于相同 VLAN 的设备之间能够互通，不同互通 VLAN 之间互相隔离，也不能与隔离 vlan 通信，可以与主 VLAN 通信&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;隔离型从 VLAN&lt;/strong&gt;：SeparateVLAN, 属于隔离 VLAN 的设备不能与相同 VLAN 内 / 互通 VLAN 通信，只能与主 VLAN 通信（一个 MuxVLAN 只能有一个隔离型从 VLAN）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1671679308345.png&#34; alt=&#34;1671679308345&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;qinq&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#qinq&#34;&gt;#&lt;/a&gt; QinQ:&lt;/h5&gt;
&lt;p&gt;802.1Q in 802.1Q，传统的 VLAN 数据帧只能携带一层 VLAN Tag，最多存在 4096 个 VLAN（0-4095，可用 4094 个），vlan 资源有限，为了扩展 VLAN 空间，通过 QinQ 的技术，在原有基础上增加一层 TAG，外层为公网 Tag，内存为私网 Tag，最多可存在 4096*4096 个 VLAN (可用 4094 * 4904)&lt;/p&gt;
&lt;h6 id=&#34;数据转发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据转发&#34;&gt;#&lt;/a&gt; 数据转发：&lt;/h6&gt;
&lt;p&gt;私网内部通过私网 Tag 正常转发，在进入公网时加上一层所属的公网 Tag，通过外层公网 Tag 在公网进行转发，进入私网时将外层公网 Tag 剥离，再通过内层私网 TAG 转发至目标设备&lt;/p&gt;
&lt;h6 id=&#34;分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分类&#34;&gt;#&lt;/a&gt; 分类：&lt;/h6&gt;
&lt;p&gt;​	基本 QinQ：为一个私网局域网设置一个公网 Tag，无论内网的哪一个 VLAN 数据进入公网都加上统一的公网 tag&lt;/p&gt;
&lt;p&gt;​	灵活 QinQ：可以为内网不同的 vlan 设置不同的公网 Tag，内网数据进入公网时，根据设置的策略加上对应的公网 tag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1671693084166.png&#34; alt=&#34;1671693084166&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1671694832837.png&#34; alt=&#34;1671694832837&#34;&gt;&lt;/p&gt;
&lt;p&gt;端口隔离，可以将设备的端口加入端口隔离组，处于相同隔离组的端口所连接的终端无法通信&lt;/p&gt;
&lt;p&gt;背景，想要实现终端之间二层隔离，通常会将端口划分为不同 VLAN，但是会浪费有限的 Vlan 资源，通过端口隔离技术，既能够实现报文二层隔离，又能够节约 VLAN 资源&lt;/p&gt;
&lt;p&gt;隔离类型，&lt;/p&gt;
&lt;p&gt;​	双向隔离，端口加入同一个隔离组后，互相不能通信&lt;/p&gt;
&lt;p&gt;​	单向隔离，在接口视图下，指定该端口与另一个端口之间的单向隔离，该接口不能与指定的端口通信，但是对端可以将数据发送给本端口&lt;/p&gt;
&lt;p&gt;隔离模式，&lt;/p&gt;
&lt;p&gt;​	L2，二层隔离三层互通（缺省），需要开启 VlanIF 的 vlan 内 ARP 代理功能，实现处于相同隔离组的端口三层通信&lt;/p&gt;
&lt;p&gt;​	ALL，二层三层都隔离，处于同一个隔离组的端口之间彻底隔离无法通信&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1672711912633.png&#34; alt=&#34;1672711912633&#34;&gt;&lt;/p&gt;
&lt;p&gt;MAC 地址表安全，&lt;/p&gt;
&lt;p&gt;​	动态 MAC 地址表项，交换机动态学习报文的源 MAC 所形成的 MAC 地址表项&lt;/p&gt;
&lt;p&gt;​	静态 MAC 地址表项，手工配置 MAC 地址与端口的映射关系所形成的表项，优先级高于动态表项&lt;/p&gt;
&lt;p&gt;​	黑洞 MAC 地址表项，配置为黑洞 MAC 的 MAC 地址类型于加入黑名单，交换机接收到源 MAC / 目的 MAC 为黑洞 MAC 的报文直接丢弃&lt;/p&gt;
&lt;p&gt;​	MAC 地址表项老化时间，默认 300 是，可以修改，0 为不老化，可以修改（防止 MAC 地址表项爆炸式增长）&lt;/p&gt;
&lt;p&gt;​	禁止 MAC 地址学习功能，默认交换机的 MAC 地址学习功能已使能，可以关闭，关闭后交换机不再形成该端口对应报文的源 MAC 表项（收到报文的动作默认转发，可以设置为丢弃）&lt;/p&gt;
&lt;p&gt;​	限制 MAC 地址表项学习数量，可以设置交换机端口学习 MAC 地址的最大数量，超过数量的可以丢弃报文（修改动作，默认转发）/ 告警&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1672717033943.png&#34; alt=&#34;1672717033943&#34;&gt;&lt;/p&gt;
&lt;p&gt;端口安全，&lt;/p&gt;
&lt;p&gt;​	安全动态 MAC 地址，开启端口安全后动态学习的 MAC 地址，&lt;/p&gt;
&lt;p&gt;​	特点，默认不会老化，可以设置老化时间，设备重启会丢失&lt;/p&gt;
&lt;p&gt;​	使用场景，适用于存在大量不固定终端的场景&lt;/p&gt;
&lt;p&gt;​	安全静态 MAC 地址，开启端口安全后手工配置 MAC 地址表项&lt;/p&gt;
&lt;p&gt;​	特点，不会被老化，保存配置后重启不会丢失&lt;/p&gt;
&lt;p&gt;​	使用场景，存在少量固定终端&lt;/p&gt;
&lt;p&gt;​	Sticky MAC 地址，粘贴 MAC 地址，开启了端口安全的同时使能了 Sticky MAC 功能后转换的地址（动态学习 / 手工添加）&lt;/p&gt;
&lt;p&gt;​	特点，不会被老化，保存配置后重启不会丢失&lt;/p&gt;
&lt;p&gt;​	适用场景，存在大量固定终端&lt;/p&gt;
&lt;p&gt;​	限制 MAC 地址学习数量，开启端口安全，默认端口学习 MAC 地址数量为 1，超出数量的采取安全保护动作&lt;/p&gt;
&lt;p&gt;​	安全保护动作，&lt;/p&gt;
&lt;p&gt;​	protect，丢弃源 MAC 不存在的报文&lt;/p&gt;
&lt;p&gt;​	（缺省）restrict，丢弃源 MAC 不存在的报文并告警&lt;/p&gt;
&lt;p&gt;​	shutdown，端口被设置为 error-down，并告警&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1672731713406.png&#34; alt=&#34;1672731713406&#34;&gt;&lt;/p&gt;
&lt;p&gt;MAC 地址漂移防止与检测，&lt;/p&gt;
&lt;p&gt;​	防止低优先级端口覆盖高优先级端口，修改端口的 mac 地址学习优先级，默认为 0，优先级高的端口可以覆盖优先级低的，低优先级不能覆盖高优先级&lt;/p&gt;
&lt;p&gt;​	配置不允许相同优先级端口发送漂移，默认可以发生，undo 后可以防止&lt;/p&gt;
&lt;p&gt;​	基于 Vlan 检测 mac 地址漂移，发生漂移后可执行动作告警 / 关闭端口 / 阻断 MAC 地址&lt;/p&gt;
&lt;p&gt;​	基于全局检测 mac 地址漂移，发生漂移后可执行动作告警 / 关闭端口 / 退出 VLAN&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1672736115087.png&#34; alt=&#34;1672736115087&#34;&gt;&lt;/p&gt;
&lt;p&gt;MACsec，保证二层数据传输的可靠性，具有数据完整性检查，数据加密，真实性校验等机制保障数据传输的安全性&lt;/p&gt;
&lt;p&gt;CAK，安全连接关联密钥，为点到点两端预相同配置连接密钥&lt;/p&gt;
&lt;p&gt;KEY Server，通过预配置参数选举，决定加密方案（生成数据加密密钥）（key server 是通过 MKA，MACsec 数据加密协商协议选举）&lt;/p&gt;
&lt;p&gt;SAK，key Server 生成的数据密钥，用于真实数据传输时进行加密（安全关联密钥）&lt;/p&gt;
&lt;p&gt;流量抑制，&lt;/p&gt;
&lt;p&gt;​	入方向，针对接收的数据设置相关 阈值（广播 / 组播 / 单播）从而控制数据的发送速率（超过阈值部分丢弃，阈值内可以通过）&lt;/p&gt;
&lt;p&gt;​	出方向，阻断广播 / 组播 / 单播报文&lt;/p&gt;
&lt;p&gt;广播风暴，在数据入反向对数据进行控制，设置相关阈值，在阈值范围内的数据可以通过，不在范围内的数据完全丢弃并设置相关惩罚动作（阻断报文 / 关闭端口），阻断不在范围内的报文只有超过阈值的报文不能通过，关闭端口后所有报文都不能通过）&lt;/p&gt;
&lt;p&gt;DHCP Snooping，防止针对 DHCP 漏洞攻击，通过信任功能，绑定表等实现&lt;/p&gt;
&lt;p&gt;攻击手段，&lt;/p&gt;
&lt;p&gt;​	DHCP 饿死攻击，非法设备通过伪造 DHCP 客户端请求报文的源 MAC 地址，不断向服务器请求 IP 地址等网络参数，直至耗尽服务器的地址，导致合法客户端没有地址可以（饿死）&lt;/p&gt;
&lt;p&gt;​	解决，设置交换机端口学习 MAC 地址的数量，防止非法设备修改 MAC 地址&lt;/p&gt;
&lt;p&gt;​	改变 CHADDR 字段的 Dos 攻击，非法设备通过修改 DHCP 报文中的 CHADDR 字段（源 MAC 不变）不停的向服务器请求 IP 地址（DHCP 服务器通过 CHADDR 字段分配地址），直至耗尽地址池的地址，当合法设备需要地址时服务器没有地址可分配（拒绝服务）&lt;/p&gt;
&lt;p&gt;​	解决，交换机 DHCP Snooping 可以检查收到的 DHCP 报文中 CHADDR 字段是否与源 MAC 一致，一致则正常处理，不一致则丢弃报文（防止修改 CHADDR 字段）&lt;/p&gt;
&lt;p&gt;​	DHCP 中间人攻击，非法设备利用 ARP 致使客户端和服务器学习到错误的 ARP 映射关系（对于客户端，服务器 IP - 非发设备 MAC，对于服务器，客户端 IP - 非法设备 MAC），客户端和服务器之间交互的所有报文都经过非法设备转发，可能会造成信息泄露 / 信息被篡改等安全隐患&lt;/p&gt;
&lt;p&gt;​	解决，交换机可以形成 DHCP Snooping 绑定表，表中记录了正确的客户端和服务器信息（IP 地址，MAC 地址，vlan，接口等对应关系），当交换机收到 DHCP 报文时，可以对报文以及接收到的接口信息与绑定表做对比，信息一致才能正常处理，否则丢弃报文&lt;/p&gt;
</content>
        <updated>2023-01-24T04:30:55.839Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/01/24/2022.12.15/</id>
        <title>HCIP(二十二) 2022.12.15</title>
        <link rel="alternate" href="http://example.com/2023/01/24/2022.12.15/"/>
        <content type="html">&lt;h4 id=&#34;mpls-ldp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mpls-ldp&#34;&gt;#&lt;/a&gt; MPLS LDP&lt;/h4&gt;
&lt;h5 id=&#34;ldp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ldp&#34;&gt;#&lt;/a&gt; LDP：&lt;/h5&gt;
&lt;p&gt;​	标签分发协议，LSR 之间建立 LDP 会话关系，互相交换报文，动态建立 LSP&lt;/p&gt;
&lt;h5 id=&#34;ldp的关系类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ldp的关系类型&#34;&gt;#&lt;/a&gt; LDP 的关系类型：&lt;/h5&gt;
&lt;p&gt;​	LDP 邻接体 —&amp;gt;LDP 会话 —&amp;gt;LDP 对等体&lt;/p&gt;
&lt;h5 id=&#34;lsr-id-和ldp-id&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lsr-id-和ldp-id&#34;&gt;#&lt;/a&gt; LSR ID 和 LDP ID:&lt;/h5&gt;
&lt;p&gt;​	LSR ID 用于在 MPLS 中唯一标识一台 LSR&lt;/p&gt;
&lt;p&gt;​	LDP ID 由 ID + 标签空间标识符组成&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：标签空间标识符如果为 0，表示标签空间是基于设备（或基于平台），如果非 0，表示是基于接口的标签空间，一般为 0，所以 LDP ID=LSR ID :0&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;ldp的工作过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ldp的工作过程&#34;&gt;#&lt;/a&gt; LDP 的工作过程：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. 运行LDP的LSR组播发送Hello报文，周期性5s发送，通过交互Hello报文，LSR之间可以建立LDP的邻接体关系（老化时间15s，Hello报文基于UDP的646端口发送）
2. Hello报文中携带了LSR的传输地址，传输地址大的一端会主动发起TCP连接，后续报文基于TCP连接交互（传输地址默认为LSR ID）
3. TCP 连接建立完成后通过交互Init报文和KeepAlive报文建立LDP会话关系，会话建立完成后LSR互为LDP对等体
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;ldp的工作过程分为三个阶段&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ldp的工作过程分为三个阶段&#34;&gt;#&lt;/a&gt; LDP 的工作过程分为三个阶段：&lt;/h5&gt;
&lt;p&gt;​	发现阶段（hello）—》会话阶段 —》通告阶段（交互 FEC 与标签映射关系等）&lt;/p&gt;
&lt;p&gt;​	注：如果发生错误，会交互 Notification 报文，为差错阶段&lt;/p&gt;
&lt;h5 id=&#34;ldp的状态机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ldp的状态机&#34;&gt;#&lt;/a&gt; LDP 的状态机：&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Non-existent：初始化状态，建立 LDP 邻接体关系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Init：TCP 连接建立完成&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Opensent：主动端发送了 Init 报文后进入此状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OpenRec：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;被动方收到主动发可接受的 Init 报文后进入此状态，并回复 Init 和 KeepAlive 报文&lt;/li&gt;
&lt;li&gt;主动方收到被动方可接收的 Init 报文进入此状态，并回复 KeepAlive 报文&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Operational：主动方 / 被动方收到了对端发送的 KeepAlive 报文后进入此状态，表示 LDP 会话建立完成&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;标签发布与管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标签发布与管理&#34;&gt;#&lt;/a&gt; 标签发布与管理：&lt;/h5&gt;
&lt;h6 id=&#34;标签发布方式默认du&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标签发布方式默认du&#34;&gt;#&lt;/a&gt; 标签发布方式：（默认 DU）&lt;/h6&gt;
&lt;p&gt;​	DU: 下游自主，不管上游是否向自己请求标签，都会主动将标签映射关系发布给上游&lt;/p&gt;
&lt;p&gt;​	DoD：下游按需，只有上游向自己请求了标签，才会向上游发布&lt;/p&gt;
&lt;h6 id=&#34;标签控制方式默认有序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标签控制方式默认有序&#34;&gt;#&lt;/a&gt; 标签控制方式：（默认有序）&lt;/h6&gt;
&lt;p&gt;​	Independent：独立，不管该 FEC 是否存在出标签，都可以为其分配入标签发布给上游&lt;/p&gt;
&lt;p&gt;​	Ordered：有序，只有该 FEC 存在对应的出标签，才会为其分配入标签发布给上游&lt;/p&gt;
&lt;h6 id=&#34;标签保留方式默认自由&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标签保留方式默认自由&#34;&gt;#&lt;/a&gt; 标签保留方式：（默认自由）&lt;/h6&gt;
&lt;p&gt;​	Liberal：自由，不管是不是自己最优的下一跳给自己的标签，都保留&lt;/p&gt;
&lt;p&gt;​	Conservative：保守，只有自己最优的下一跳的标签才会保留&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：标签保留方式与标签发布方式关联，当发布方式为 DU 时，保留方式为自由，发布方式为 DoD 时，保留方式为保守&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;php&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php&#34;&gt;#&lt;/a&gt; PHP:&lt;/h5&gt;
&lt;p&gt;​	次末跳弹出，在 MPLS 标签转发时，连接 FEC 目的网络的最后一跳路由器始终需要执行弹出标签以及查表转发的动作，压力过大，容易成为故障点，为了减轻最后一跳设备的压力，设置 PHP，使最后一条设备向倒数第二跳分配特殊标签（默认为隐式空标签 3），倒数第二跳在转发数据时，发现出标签为特殊标签哦，执行弹出动作，将 IP 数据转发给最后一跳，最后一跳只需要查表转发即可&lt;/p&gt;
&lt;h6 id=&#34;隐式空标签和显示空标签&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#隐式空标签和显示空标签&#34;&gt;#&lt;/a&gt; 隐式空标签和显示空标签：&lt;/h6&gt;
&lt;p&gt;​	PHP 默认最后一条分配隐式空标签 3，次末跳在弹出标签时会丢失 Qos 信息（类似报文优先级），在部署了 Qos 的场景下需要保留 Qos 信息，此时可以设置最后一跳给次末跳分配显示空标签 0，次末跳在弹出标签时可以保留 Qos 信息&lt;/p&gt;
&lt;p&gt;设置：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;底层路由可达&lt;/li&gt;
&lt;li&gt;设置 MPLS LSR-ID&lt;/li&gt;
&lt;li&gt;全局开启 mpls&lt;/li&gt;
&lt;li&gt;全局开启 mpls ldp&lt;/li&gt;
&lt;li&gt;物理接口开启 mpls&lt;/li&gt;
&lt;li&gt;物理接口开启 mpls ldp&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;查看：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;display mpls ldp peer //&lt;strong&gt; 查看 ldp 的邻居&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;display mpls ldp session //&lt;strong&gt; 查看 ldp 的会话&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
        <updated>2023-01-24T04:30:55.838Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/01/24/2022.12.14/</id>
        <title>HCIP(二十一) 2022.12.14</title>
        <link rel="alternate" href="http://example.com/2023/01/24/2022.12.14/"/>
        <content type="html">&lt;h4 id=&#34;mpls&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mpls&#34;&gt;#&lt;/a&gt; MPLS :&lt;/h4&gt;
&lt;p&gt;​	多协议标签交换&lt;/p&gt;
&lt;h5 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景：&lt;/h5&gt;
&lt;p&gt;​	网络发展初期，设备的硬件条件低，按照传统的查表转发数据效率低下，想要提高数据的转发速度，研究出了 MPLS 协议，通过给数据加上对应的 MPLS 标签，然后设备按照标签转发数据，提高转发效率&lt;/p&gt;
&lt;p&gt;注：到现在为止，设备硬件已经发展较好，MPLS 的作用不再是加快转发效率，而是由于 MPLS 的其他特性可以结合多种协议使用&lt;/p&gt;
&lt;h5 id=&#34;相关概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#相关概念&#34;&gt;#&lt;/a&gt; 相关概念：&lt;/h5&gt;
&lt;p&gt;​	MPLS 域：由运行了 MPLS 的路由器组成，在域内，数据通常通过标签转发&lt;/p&gt;
&lt;p&gt;​	LSR：标签交换路由器，运行了 MPLS 的路由器&lt;/p&gt;
&lt;p&gt;​	LER：标签边缘路由器，处于 MPLS 域边界的路由器，一般执行压入 / 弹出标签的动作&lt;/p&gt;
&lt;p&gt;​	FEC：转发等价类，一组具有相同特性的数据流的集合，一般指一条路由就是一个 FEC&lt;/p&gt;
&lt;p&gt;​	入站 LSR：ingress，为数据执行压入标签的动作（加上标签）&lt;/p&gt;
&lt;p&gt;​	中转 LSR：Transit，将携带 MPLS 标签的数据执行交换标签的动作&lt;/p&gt;
&lt;p&gt;​	出站 LSR：Egress，为数据执行弹出标签的动作（拆掉标签）&lt;/p&gt;
&lt;p&gt;注：入站 / 出战 LSR 是根据数据区分，角色不固定&lt;/p&gt;
&lt;h5 id=&#34;lsp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lsp&#34;&gt;#&lt;/a&gt; LSP：&lt;/h5&gt;
&lt;p&gt;​	标签交换路径，数据在 MPLS 域内所经过的路径（从不同设备进入 MPLS 域时 LSP 不相同；同一个 FEC 转发时标签相同）&lt;/p&gt;
&lt;h5 id=&#34;mpls的报文格式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mpls的报文格式&#34;&gt;#&lt;/a&gt; MPLS 的报文格式：&lt;/h5&gt;
&lt;p&gt;​	二层帧头 + MPLS 标签头部 + IP 头部&lt;/p&gt;
&lt;h6 id=&#34;mpls标签头部&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mpls标签头部&#34;&gt;#&lt;/a&gt; MPLS 标签头部：&lt;/h6&gt;
&lt;p&gt;​	Lable：标签空间，20bit&lt;/p&gt;
&lt;p&gt;​	EXP：服务类别&lt;/p&gt;
&lt;p&gt;​	S：栈底标识，如果置位为 1，表示是最后一层标签（MPLS 支持多层标签嵌套）&lt;/p&gt;
&lt;p&gt;​	TTL：8bit，生成时间，防环&lt;/p&gt;
&lt;h6 id=&#34;标签空间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标签空间&#34;&gt;#&lt;/a&gt; 标签空间：&lt;/h6&gt;
&lt;p&gt;​	是一个短而定长，只具有本地意义的标识符，标签空间就是指标签的范围，&lt;/p&gt;
&lt;p&gt;0-15 为特殊标签，&lt;/p&gt;
&lt;p&gt;16-1023 静态 LSP&lt;/p&gt;
&lt;p&gt;1024 及以上 LDP (标签分发协议，动态建立 LSP)&lt;/p&gt;
&lt;h6 id=&#34;动作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#动作&#34;&gt;#&lt;/a&gt; 动作：&lt;/h6&gt;
&lt;p&gt;​	Push：压入，给数据加上一个标签（一个 / 多个）&lt;/p&gt;
&lt;p&gt;​	Swap：交换，将数据的最外层标签进行交换&lt;/p&gt;
&lt;p&gt;​	Pop：弹出，将数据拆除标签（一个 / 多个）&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;MPLS 标签转发过程：（例）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1671000647498.png&#34; alt=&#34;1671000647498&#34;&gt;&lt;/p&gt;
&lt;p&gt;R1(Ingress)————R2(Transit)————R3(Egress)————&amp;gt; FEC ：4.4.4.4&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;入节点 R1 接收到一个普通的 IP 数据，根据目的 IP4.4.4.4 查找 FIB，发现对应的 Tunnel ID 非 0，表示进行隧道转发（标签）&lt;/li&gt;
&lt;li&gt;根据 Tunnel ID（隧道 ID） 找到对应的动作是压入标签，并且下一跳是 R2（还有出接口，标签等信息），从接口带标签发送出去&lt;/li&gt;
&lt;li&gt;R2 接收到携带 MPLS 标签的数据后，根据入标签找到对应的 Tunnel ID, 然后根据 Tunnel ID 找到动作作为交换标签，把数据中携带的入标签交换为对应的出标签，然后从出接口发送给下一跳设备 R3&lt;/li&gt;
&lt;li&gt;R3 接收到携带 MPLS 标签的数据后，根据入标签查找到的动作作为弹出标签，然后将 MPLS 标签头部拆除，在根据头部的目的 IP 进行普通的 IP 转发&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;配置:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1671002656341.png&#34; alt=&#34;1671002656341&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;入站 LSR：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;static-lsp ingress 1 destination 3.3.3.3 32 nexthop 10.1.12.2 out-label 100&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;中转 LSR：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;static-lsp transit 1 incoming-interface GigabitEthernet0/0/0 in-label 100 nexthop 10.1.23.3 out-label 200&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;出站 LSR：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;static-lsp egress 1 incoming-interface GigabitEthernet0/0/0 in-label 200&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;查看配置：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;display mpls lsp  // 查看 LSP 信息&lt;/li&gt;
&lt;li&gt;display mpls static-lsp // 查看静态 LSP 信息&lt;/li&gt;
&lt;li&gt;display fib // 查看转发信息表&lt;/li&gt;
&lt;/ol&gt;
</content>
        <updated>2023-01-24T04:30:55.835Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/01/24/2022.12.13/</id>
        <title>HCIP(二十) 2022.12.13</title>
        <link rel="alternate" href="http://example.com/2023/01/24/2022.12.13/"/>
        <content type="html">&lt;h4 id=&#34;dhcp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dhcp&#34;&gt;#&lt;/a&gt; DHCP：&lt;/h4&gt;
&lt;p&gt;​	动态主机配置协议，使用 UDP 传输报文，67 端口（服务器）和 68 端口（客户端）&lt;/p&gt;
&lt;h5 id=&#34;报文类型通过option53携带&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#报文类型通过option53携带&#34;&gt;#&lt;/a&gt; 报文类型：（通过 Option53 携带）&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. DHCP Discover 
2. DHCP Offer
3. DHCP Request
4. DHCP Decline ：当客户端获取的IP地址发生冲突时，通过该报文通知服务器
5. DCHP Ack
6. DHCP Nak
7. DHCP release
8. DHCP inform ：客户端想要获取更加详细的配置参数，通过该报文向服务器请求
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;服务器向客户端分配ip地址的顺序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务器向客户端分配ip地址的顺序&#34;&gt;#&lt;/a&gt; 服务器向客户端分配 IP 地址的顺序：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. 静态绑定MAC地址的IP0
2. 使用过的IP（客户端在向服务器请求IP地址时，会利用Option50携带自己曾经用过的地址，期望服务器分配该地址）
3. 空闲的IP地址
4. 超过租期的IP地址
5. 产生冲突的IP地址
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;dhcp-relay&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dhcp-relay&#34;&gt;#&lt;/a&gt; DHCP relay：&lt;/h5&gt;
&lt;p&gt;​	DHCP 中继，当客户端和服务器不在一个二层广播域，正常发送的广播报文无法进行传递，需要将连接客户端的三层设备设置为 DHCP 中继，客户端服务器传递交互的报文&lt;/p&gt;
&lt;h6 id=&#34;工作过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#工作过程&#34;&gt;#&lt;/a&gt; 工作过程：&lt;/h6&gt;
&lt;p&gt;​       客户端 ——————–中继 —————— 服务器&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;— 广播 discover ——-| 单播 discover———》&lt;/li&gt;
&lt;li&gt;《———offer———|——offer———&lt;/li&gt;
&lt;li&gt;— 广播 request———| 单播 request———》&lt;/li&gt;
&lt;li&gt;《———ACK ———-|——ACK———&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1670912905122.png&#34; alt=&#34;1670912905122&#34;&gt;&lt;/p&gt;
&lt;p&gt;DHCP-Relay&lt;/p&gt;
&lt;p&gt;中继连接终端的端口：&lt;/p&gt;
&lt;p&gt;dhcp select relay&lt;/p&gt;
&lt;p&gt;dhcp relay server-ip 10.1.12.2&lt;/p&gt;
&lt;p&gt;// 向一个服务器请求&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;dhcp server group 1&lt;/p&gt;
&lt;p&gt;dhcp-server 10.1.12.2&lt;/p&gt;
&lt;p&gt;中断连接终端的端口：&lt;/p&gt;
&lt;p&gt;dhcp select relay&lt;/p&gt;
&lt;p&gt;dhcp relay server-ip server-select 1&lt;/p&gt;
&lt;p&gt;// 向多个服务器请求（设置服务器组）&lt;/p&gt;
&lt;p&gt;路由器通过 DHCP 获取地址：&lt;/p&gt;
&lt;p&gt;ip address dhcp-alloc&lt;/p&gt;
&lt;p&gt;5489-987B-308E&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
</content>
        <updated>2023-01-24T04:30:55.833Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/01/24/2022.12.12/</id>
        <title>HCIP(十九) 2022.12.12</title>
        <link rel="alternate" href="http://example.com/2023/01/24/2022.12.12/"/>
        <content type="html">&lt;h4 id=&#34;vrrp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vrrp&#34;&gt;#&lt;/a&gt; VRRP:&lt;/h4&gt;
&lt;p&gt;​	虚拟路由器冗余协议，使用 IP 的协议号&lt;strong&gt; 112&lt;/strong&gt;，使用组播地址&lt;strong&gt; 224.0.0.18&lt;/strong&gt; 发送报文&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h5 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. 解决单个网关造成的单点故障
2. 解决多个网关造成的IP地址冲突
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原理&#34;&gt;#&lt;/a&gt; 原理：&lt;/h5&gt;
&lt;p&gt;​	通过将多个物理路由器逻辑为一个虚拟路由器，再为虚拟路由器设置对应的虚拟 IP 地址作为终端的网关地址，&lt;strong&gt;虚拟 MAC 前 5 字节固定 0x0000-5e00-01xx&lt;/strong&gt;，其中 XX 为 VRID 转换为十六进制所得&lt;/p&gt;
&lt;p&gt;注：虚拟路由器之间通过&lt;strong&gt; VRID 区分&lt;/strong&gt;，构成虚拟路由器的物理设备称之为 VRRP 路由器，&lt;strong&gt;分为 Master 和 Backup&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;两种角色，其中 Master 用于承载终端访问其他网络产生的数据，Backup 作为 Master 的备份&lt;/p&gt;
&lt;h6 id=&#34;master的选举&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#master的选举&#34;&gt;#&lt;/a&gt; Master 的选举：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;1. 通过VRRP优先级，范围0-255，数值越大越优，其中**0和255保留**，0用于使Backup快速成为Master，255给真实IP地址拥有者（虚拟IP）
2. 优先级相同时，比较接口IP地址，越大越优 (如果此时已经存在Master，不会继续比较IP )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注：Backup 作为 Master 的备份，会监听 Master 发送的报文，VRRP 中只有一个报文 Advertisement（通告报文），&lt;strong&gt;默认周期性每 1s&lt;/strong&gt; 发送一次，Backup 如果再 Master Down 时超时没有收到 ADV 报文，就认为 Master 不在，自己成为 Master&lt;/p&gt;
&lt;p&gt;Master_DOWN=(3*Adv_int)+Skew_Time (偏移时间)&lt;/p&gt;
&lt;p&gt;Skew_Time=(256-Priority)/256&lt;/p&gt;
&lt;h5 id=&#34;vrrp的状态变化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vrrp的状态变化&#34;&gt;#&lt;/a&gt; VRRP 的状态变化：&lt;/h5&gt;
&lt;p&gt;​	Init：初始化状态，开启 VRRP 时的状态&lt;/p&gt;
&lt;p&gt;​	Backup：备份状态，当自己的优先级小于 255 时，先进入 Backup (收到优先级比自己大的报文也会进入此状态)&lt;/p&gt;
&lt;p&gt;​	Master：活跃状态，优先级等于 255 时直接成为 master（收到优先级比自己小 / Master_down 时间超时会进入此状态）&lt;/p&gt;
&lt;h5 id=&#34;vrrp主备回切&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vrrp主备回切&#34;&gt;#&lt;/a&gt; VRRP 主备回切：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. Master 设备退出备份组，会主动发送优先级为0的报文，让Backup迅速成为Master
2. Master设备故障/链路故障，导致Backup无法接收到Master的报文，等待Master_Down超时，Backup成为Master
3. 由于VRRP默认开启抢占并且立即抢占，当故障的Master重新恢复时/网络不稳定，会造成主备设备频繁切换，数据丢失，可以设置VRRP的非抢占模式（关闭抢占）或者设置VRRP的抢占延时
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置：&lt;/p&gt;
&lt;p&gt;interface GigabitEthernet0/0/0&lt;/p&gt;
&lt;p&gt;ip address 10.1.1.20 255.255.255.0  //&lt;strong&gt; 物理 ip 地址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vrrp vrid 1 virtual-ip 10.1.1.254 //&lt;strong&gt; 设置 VRID1 的虚拟 IP 地址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vrrp vrid 2 virtual-ip 10.1.1.253&lt;/p&gt;
&lt;p&gt;vrrp vrid 2 priority 200 //&lt;strong&gt; 设置优先级&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vrrp vrid 1 preempt-mode disable //&lt;strong&gt; 关闭抢占&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vrrp vrid 1 preempt-mode timer delay 15 //&lt;strong&gt; 设置抢占延时 15s&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vrrp vrid 1 track interface GigabitEthernet0/0/1 reduced 101 //&lt;strong&gt; 监视上行端口&lt;/strong&gt; （检测直连故障）&lt;/p&gt;
&lt;p&gt;vrrp vrid 1 track bfd-session session-name 1 reduced 110 //&lt;strong&gt;VRRP 联动 BFD 会话检测链路连通性&lt;/strong&gt;（检测直连 / 非直连故障）&lt;/p&gt;
</content>
        <updated>2023-01-24T04:30:55.830Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/12/07/2022.12.7/</id>
        <title>HCIP(十六） 2022.12.7</title>
        <link rel="alternate" href="http://example.com/2022/12/07/2022.12.7/"/>
        <content type="html">&lt;h5 id=&#34;igmp特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#igmp特性&#34;&gt;#&lt;/a&gt; IGMP 特性：&lt;/h5&gt;
&lt;h6 id=&#34;igmp-snooping&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#igmp-snooping&#34;&gt;#&lt;/a&gt; IGMP Snooping：&lt;/h6&gt;
&lt;p&gt;​	由于路由器一般都会通过交换机与终端相连，在运行了 IGMP 之后，虽然查询器形成了对应的组播表项，但是交换机收到组播报文后默认执行泛洪行为，无论 PC 加入哪一个组播组，都会收到所有组播组的组播数据，开启交换机的 igmp snooping 功能后，交换机会侦听查询器和组播成员交互的 IGMP 报文，形成二层转发表项（组播组对应端口），收到组播数据后，按照二层转发表项将数据转发给正确的接收者 。&lt;/p&gt;
&lt;h6 id=&#34;igmp-ssm-mapping&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#igmp-ssm-mapping&#34;&gt;#&lt;/a&gt; IGMP SSM-mapping:&lt;/h6&gt;
&lt;p&gt;​	在 PC 不支持 IGMPv3 时，想要支持 SSM 模型，需要在查询器上配置 SSM Mapping 的组播组和组播源静态映射关系，形成对应的组播表项（SSM 组地址范围 232.0.0.0-232.255.255.255）&lt;/p&gt;
&lt;h6 id=&#34;igmp-proxy&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#igmp-proxy&#34;&gt;#&lt;/a&gt; IGMP Proxy：&lt;/h6&gt;
&lt;p&gt;​	IGMP 代理，为了减少查询器处理的 IGMP 报文数量，代理设备会过滤掉组成员发送的不必要的 IGMP 报文（例如有新成员加入时，加入的组播组已经存在组播表项，代理设备就不会将成员关系报告报文发送给查询器）&lt;/p&gt;
&lt;h4 id=&#34;pim&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pim&#34;&gt;#&lt;/a&gt; PIM：&lt;/h4&gt;
&lt;p&gt;协议无关组播，使用 IP 的协议号 103，使用组播地址 224.0.0.13 发送报文&lt;/p&gt;
&lt;h5 id=&#34;组播分发树&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#组播分发树&#34;&gt;#&lt;/a&gt; 组播分发树：&lt;/h5&gt;
&lt;p&gt;​	SPT (最短路径树)，RPT（共享树）&lt;/p&gt;
&lt;h5 id=&#34;pm-dm&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pm-dm&#34;&gt;#&lt;/a&gt; PM DM:&lt;/h5&gt;
&lt;p&gt;​	PIM Dense Mode，密集模式，适用于组播接收者分布密集的场景，采用推（Push）的方式&lt;/p&gt;
&lt;h6 id=&#34;工作过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#工作过程&#34;&gt;#&lt;/a&gt; 工作过程：&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;邻居发现：运行 PIM DM 的路由器互相交互 hello 报文，协商参数，建立 PIM 邻居关系以及选举 DR，周期性 30s 发送，老化时间 105s，选举 DR 通过 DR 优先级，越大越优，优先级相同比较 IP 地址，越大越优，DR 作为 IGMPv1 查询器，没有其他意义&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;扩散：PIM DM 认为网络中所有地方都存在接收者，当收到组播数据时，会向所有邻居扩散组播数据，沿途路由器都形成（S,G）表项，建立 SPT 树，（S,G）表项老化时间 210s&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RPF 检查：反向路径转发，收到组播数据的路由器第一时间都是进行 RPF 检查，避免次优路径，重复数据以及转发环路问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Assert 断言：组播路由器在转发组播数据时，如果从下游接口收到了相同的组播数据（多台设备拥有同一个下游设备，需要进行竞选避免重复数据），触发 Assert 断言机制，交互 Assert 报文竞选，竞选成功的作为 Assert Winner 继续转发组播数据，竞选失败的作为 Assert Loser 将端口从下游接口删除，Loser 会侦听 Winner 发送组播数据，如果超过 180s 没有接收到 Winner 的数据，重新参与竞选&lt;/p&gt;
&lt;p&gt;竞选规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;比较去往组播源的单播协议优先级，优先级小的优&lt;/li&gt;
&lt;li&gt;比较去往组播源的开销，越小越优&lt;/li&gt;
&lt;li&gt;比较下游接口 IP 地址，越大越优&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prune 剪枝：当组播路由收到组播数据后，发现没有下游接口，不需要组播数据，此时会主动向上游发送剪枝消息，上游收到剪枝消息后，会将收到消息的端口从下游接口删除，不再向该端口转发组播数据（Assert 断言的失败者 Loser 如果没有其他下游接口也会向上游剪枝）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;状态刷新：由于剪枝存在一个计时器 210s，计时器超时后会重新恢复为下游接口，需要重复剪枝动作，为了维持剪枝状态，第一跳路由器会周期性 60s 发送状态刷新报文，刷新剪枝计时器，使其一直维持剪枝状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Graft 嫁接：如果已经剪枝的路由器重新有了接收者，需要接收组播数据，可以主动向上游发送 Graft 消息请求加入下游接口，反向建立组播转发路径，上游收到嫁接消息后，回复 Graft-Ack 确认，将端口重新加入下游接口&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <updated>2022-12-07T12:42:31.528Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/12/07/2022.12.6/</id>
        <title>HCIP(十五) 2022.12.6</title>
        <link rel="alternate" href="http://example.com/2022/12/07/2022.12.6/"/>
        <content type="html">&lt;h4 id=&#34;igmp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#igmp&#34;&gt;#&lt;/a&gt; IGMP:&lt;/h4&gt;
&lt;p&gt;​	因特网组管理协议&lt;/p&gt;
&lt;p&gt;对于最后一跳路由器：需要感知网络中是否存在组播接收者以及存在哪些组播组的接收者&lt;/p&gt;
&lt;p&gt;对于组播成员：需要声明自己加入哪一个组播组&lt;/p&gt;
&lt;p&gt;IGMP 分为 v1 ，v2，v3 三个版本&lt;/p&gt;
&lt;h5 id=&#34;igmpv1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#igmpv1&#34;&gt;#&lt;/a&gt; IGMPv1：&lt;/h5&gt;
&lt;h6 id=&#34;普遍组查询报文&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#普遍组查询报文&#34;&gt;#&lt;/a&gt; 普遍组查询报文：&lt;/h6&gt;
&lt;p&gt;​	由 IGMP 查询器周期性 60s 发送，用来查询网络中是否存在组播组接收者 (IGMPv1 无法自己选查询器，需要依靠组播路由协议 PIM 选举）&lt;/p&gt;
&lt;p&gt;​	目的地址为 224.0.0.1 表示查询所有组&lt;/p&gt;
&lt;h6 id=&#34;成员关系报告报文&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#成员关系报告报文&#34;&gt;#&lt;/a&gt; 成员关系报告报文：&lt;/h6&gt;
&lt;p&gt;​	由组播接收者发送，用来告诉查询器要加入哪一个组播组，目的地址为自己加入的组播组地址&lt;/p&gt;
&lt;h6 id=&#34;响应抑制机制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#响应抑制机制&#34;&gt;#&lt;/a&gt; 响应抑制机制：&lt;/h6&gt;
&lt;p&gt;​	接收者回应成员关系报告报文时存在在响应抑制机制，在收到查询器的查询报文后，启动一个计时器 1-10s&lt;/p&gt;
&lt;p&gt;，计时器超时后回应成员关系报告报文，如果发现相同组播组已经有终端回应了成员关系报告报文，自身不再发送&lt;/p&gt;
&lt;h6 id=&#34;离组机制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#离组机制&#34;&gt;#&lt;/a&gt; 离组机制：&lt;/h6&gt;
&lt;p&gt;​	IGMPv1 中组成员静默离开，离组时不发送任何报文，查询器通过 130s (查询报文时间 * 健壮系数 2 + 最大响应抑制时间 10s) 没有收到成员关系报告报文判断没有接收者，从而删除对应的组播表项&lt;/p&gt;
&lt;p&gt;multicast routing-enable&lt;/p&gt;
&lt;p&gt;interface Gigabit Ethernet 0/0/0&lt;/p&gt;
&lt;p&gt;pim dm 开启 PIM 选举查询器&lt;br&gt;
 igmp enable  开启 igmp&lt;br&gt;
igmp version 1 设置版本&lt;/p&gt;
&lt;p&gt;配置静态&lt;/p&gt;
&lt;p&gt;igmp static-group 组地址&lt;/p&gt;
&lt;h5 id=&#34;igmpv2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#igmpv2&#34;&gt;#&lt;/a&gt; IGMPv2:&lt;/h5&gt;
&lt;p&gt;​	相比 v1 来说做了一些改进，新增加了离开报文，并且自主选举查询器&lt;/p&gt;
&lt;h6 id=&#34;查询器选举&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查询器选举&#34;&gt;#&lt;/a&gt; 查询器选举：&lt;/h6&gt;
&lt;p&gt;​	当存在多个路由器能够向网段转发组播数据，需要选举出查询器，通过发送普遍组查询报文选举，接口 IP 地址小的作为查询器，负责周期性发送查询报文，选举失败的路由器会监听查询器发送的查询报文，如果 125s 没有收到查询报文，则认为查询器不在，自己重新成为查询器&lt;/p&gt;
&lt;h6 id=&#34;成员离开报文&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#成员离开报文&#34;&gt;#&lt;/a&gt; 成员离开报文：&lt;/h6&gt;
&lt;p&gt;​	组成员离开主动发送离开报文，通知查询器不再接收某个组播组的数据 ，目的地址为 224.0.0.2 （表示发送给所有路由器）&lt;/p&gt;
&lt;h6 id=&#34;特定组查询报文&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#特定组查询报文&#34;&gt;#&lt;/a&gt; 特定组查询报文：&lt;/h6&gt;
&lt;p&gt;​	查询器收到成员离开报文后，需要知道网络中是否还存在该组的其他接收者，通过发送特定组查询报文查询，1s 一次，发两次，如果收到了该组的成员关系报告报文，则保留组播表项，如果没有收到则删除对应的表项，&lt;strong&gt;报文目的地址为查询的组播组地址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注：IGMPv2 在报文中新增了一个最大响应时间字段，表示组播接收者需要在响应时间内发送成员关系报告报文（响应抑制机制），v2 的响应时间可以修改，1-25s，默认 10s（如果接收者少，可以将最大响应时间改小一点，加快成员报告报文的发送，接收者数量多就可以把时间改大，减少成员关系报告报文的重复发送）&lt;/p&gt;
&lt;p&gt;接口下：&lt;/p&gt;
&lt;p&gt;​	igmp max-response-time 1-25s&lt;/p&gt;
&lt;h5 id=&#34;igmpv3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#igmpv3&#34;&gt;#&lt;/a&gt; IGMPv3：&lt;/h5&gt;
&lt;p&gt;​	IGMPv1 和 IGMPv2 都适用与 ASM 模型，无法指定组播源，在 SSM 模型下需要指定组播源，可以通过 IGMPv3 实现&lt;/p&gt;
&lt;h6 id=&#34;报文&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#报文&#34;&gt;#&lt;/a&gt; 报文：&lt;/h6&gt;
&lt;p&gt;​	普遍组查询报文，特定组查询报文，特定源组查询报文&lt;/p&gt;
&lt;h6 id=&#34;模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#模式&#34;&gt;#&lt;/a&gt; 模式：&lt;/h6&gt;
&lt;p&gt;​	Include：表示加入某个组播，并且只愿意接收某些组播源发往该组的数据，例如：&lt;/p&gt;
&lt;p&gt;​	（S1,S2,S3,G1 include）表示加入 G1 这个组组播，并且在接收组播数据时只接收 S1/S2/S3 发送的组播数据，其他组播源发送的不接受&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​	Exclude：表示加入某个组播组，但是需要过滤某些组播源发送的组播数据，例如：&lt;/p&gt;
&lt;p&gt;​	（S1,S2,S3,G1 exclude）表示加入 G1 这个组播组，并且接收除了 S1/S2/S3 之外所有组播源发送的组播数据&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​	change_to_include_mode：模式改变为 include，原本是 exclude 过滤某些组播源发送的数据，现在改变为愿意接收（如果模式改变为 include 后，没有指定组播源，表示不接收这个组播组的数据，表示离组）&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​	change_to_exclude_mode: 模式改变为 exclude，原本是 include 愿意接收某些组播源发送的组播数据，现在改变为不愿意接收（如果模式改变为 exclude 后，没有指定组播源，表示接收发往这个组播组的所有组播数据）&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​	Allow_new_source: 增加新的源，增加接收组播数据的组播源，如果原本是 include 模式，就是在原有基础上增加，如果是 exclude 模式，就是在原有的基础上删除&lt;/p&gt;
&lt;p&gt;​	Block_old_source：删除旧的源，删除原本接收组播数据的组播源，如果原本是 include，就是在原有的基础上删除，如果是 exclude，就是在原有的基础上增加&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​	注：IGMPv3 没有定义专门的离开报文，通过改变成员关系报告报文的模式离开，并且成员关系报告报文的目的地址为 224.0.0.22（表示发送给所有运行 IGMPv3 的路由器）&lt;/p&gt;
</content>
        <updated>2022-12-07T06:00:20.382Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/12/07/2022.12.2/</id>
        <title>HCIP(十四) 2022.12.2</title>
        <link rel="alternate" href="http://example.com/2022/12/07/2022.12.2/"/>
        <content type="html">&lt;h4 id=&#34;ip组播基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ip组播基础&#34;&gt;#&lt;/a&gt; IP 组播基础&lt;/h4&gt;
&lt;p&gt;​	组播：一对多发送业务数据（点到多点业务）&lt;/p&gt;
&lt;p&gt;​	使用单播承载点到多点业务会导致重复流量以及带宽占用严重的问题&lt;/p&gt;
&lt;p&gt;​	使用广播承载点到多点业务会存在安全隐患&lt;/p&gt;
&lt;p&gt;​	使用组播承载既没有重复流量不会占用链路带宽，也可以提高数据安全性&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1669965936622.png&#34; alt=&#34;1669965936622&#34;&gt;&lt;/p&gt;
&lt;p&gt;组播 IP 地址：224.0.0.0 — 239.255.255.255&lt;/p&gt;
&lt;p&gt;组播 MAC 地址：0x01-00-5e - 第 25bit 位为 0，后 23bit 由组播 IP 映射&lt;/p&gt;
&lt;p&gt;注：由于组播 IP 地址前 4bit 固定为 1110，后 23bit 映射为组播 MAC，中间 5bit 丢失，会造成 32 个组播 IP 地址映射到同一个组播 MAC 地址&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;范围&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;含义&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;224.0.0.0—224.0.0.255&lt;/td&gt;
&lt;td&gt;为路由协议预留的永久组地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;224.0.1.0—231.255.255.255    233.0.0.0—238.255.255.255&lt;/td&gt;
&lt;td&gt;Any-Source 临时组播组地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;232.0.0.0—232.255.255.255&lt;/td&gt;
&lt;td&gt;Source-Specific 临时组播组地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;239.0.0.0—239.255.255.255&lt;/td&gt;
&lt;td&gt;本地管理的 Any-Source 临时组播组地址&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;组播服务模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#组播服务模型&#34;&gt;#&lt;/a&gt; 组播服务模型：&lt;/h5&gt;
&lt;p&gt;​	ASM：任意源组播，组播组成员（接收组播数据的设备）只关心数据是不是发往自己所在的组播组，不关心是谁发送的数据&lt;/p&gt;
&lt;p&gt;​	SSM：指定源组播，组播组成员不仅关心数据是不是发往自身所在的组播组，还关心是谁发送的组播数据&lt;/p&gt;
&lt;h5 id=&#34;组播网络架构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#组播网络架构&#34;&gt;#&lt;/a&gt; 组播网络架构：&lt;/h5&gt;
&lt;p&gt;源端网络：组播源 - 第一跳路由器（接收到组播数据的第一个三层组播设备）&lt;/p&gt;
&lt;p&gt;组播转发网络：由组播路由器组成，帮忙转发组播数据的网络&lt;/p&gt;
&lt;p&gt;成员端网络：最后一跳路由器 - 组播组成员（接收组播数据的接收者）&lt;/p&gt;
&lt;p&gt;组播转发数据时可能会出现环路，重复数据，次优路劲等问题，可以通过 RPF 检查解决&lt;/p&gt;
&lt;h5 id=&#34;rpf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rpf&#34;&gt;#&lt;/a&gt; RPF:&lt;/h5&gt;
&lt;p&gt;​	反向路径转发，通过确定去往组播源最优的出接口来保障组播路由器接收到最优的组播数据&lt;/p&gt;
&lt;h6 id=&#34;检查过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#检查过程&#34;&gt;#&lt;/a&gt; 检查过程：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;1. 组播路由器接收到组播数据
2. 根据组播数据中的源IP地址查找对应最优的出接口
3. 检查接收到组播数据的入接口与对应最优的出接口是否一致
4. 接口一致则接收数据，不一致则丢弃
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;rpf路由选举确定最优出接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rpf路由选举确定最优出接口&#34;&gt;#&lt;/a&gt; RPF 路由选举（确定最优出接口）：&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;将单播路由协议 / MBGP / 组播静态路由中去往组播源的路由作为备选 RPF 路由&lt;/li&gt;
&lt;li&gt;从备选路由中选则掩码最长的&lt;/li&gt;
&lt;li&gt;掩码相同 选择协议路由优先级最高的（小）&lt;/li&gt;
&lt;li&gt;优先级相同 组播静态 &amp;gt; MBGP &amp;gt; 单播路由&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：所有组播路由器&lt;/p&gt;
&lt;p&gt;在接收到组播数据时都需要进行 RPF 检查，检查通过才能接收&lt;/p&gt;
</content>
        <updated>2022-12-07T06:00:20.380Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/12/07/2022.12.1/</id>
        <title>HCIP(十三) 2022.12.1</title>
        <link rel="alternate" href="http://example.com/2022/12/07/2022.12.1/"/>
        <content type="html">&lt;h4 id=&#34;交换机堆叠与集群&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#交换机堆叠与集群&#34;&gt;#&lt;/a&gt; 交换机堆叠与集群&lt;/h4&gt;
&lt;p&gt;堆叠：istack，可以将多台支持堆叠特性的物理交换机虚拟为一台逻辑交换机（一般是盒式交换机）&lt;/p&gt;
&lt;p&gt;集群：CSS，可以将两台支持集群特性的物理交换机虚拟为一台逻辑交换机（一般是框式交换机）&lt;/p&gt;
&lt;h5 id=&#34;堆叠系统&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠系统&#34;&gt;#&lt;/a&gt; 堆叠系统：&lt;/h5&gt;
&lt;p&gt;通过堆叠技术形成的虚拟交换机由多台物理交换机组成，交换机角色分为主交换机，备交换机，从交换机&lt;/p&gt;
&lt;p&gt;​	主交换机：负载收集成员交换机信息以及管理成员交换机&lt;/p&gt;
&lt;p&gt;​	备交换机：会同步主交换机的信息，作为主交换机的备份&lt;/p&gt;
&lt;p&gt;​	从交换机：主要负载业务数据的转发&lt;/p&gt;
&lt;h5 id=&#34;堆叠id&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠id&#34;&gt;#&lt;/a&gt; 堆叠 ID：&lt;/h5&gt;
&lt;p&gt;在对端系统中唯一标识一台交换机，缺省堆叠 ID 为 0，当一个堆叠系统中堆叠 ID 冲突时，会由主交换机重新分配&lt;/p&gt;
&lt;h5 id=&#34;堆叠连接方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠连接方式&#34;&gt;#&lt;/a&gt; 堆叠连接方式：&lt;/h5&gt;
&lt;p&gt;​	堆叠卡堆叠：通过专用的堆叠接口和堆叠线缆连接进行堆叠&lt;/p&gt;
&lt;p&gt;​	业务口堆叠：利用现有的业务接口连接，再将业务接口加入堆叠逻辑接口进行堆叠&lt;/p&gt;
&lt;h5 id=&#34;堆叠逻辑接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠逻辑接口&#34;&gt;#&lt;/a&gt; 堆叠逻辑接口：&lt;/h5&gt;
&lt;p&gt;stack port n/1 和 stack port n/2 ，其中 n 为设备的堆叠 ID，再进行堆叠时，设备连接其他物理设备的逻辑接口必须是 n/1 连接 n/2（n/2 连接 n/1）&lt;/p&gt;
&lt;h5 id=&#34;堆叠拓扑类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠拓扑类型&#34;&gt;#&lt;/a&gt; 堆叠拓扑类型：&lt;/h5&gt;
&lt;p&gt;​	链形连接：容易增加新的成员设备，但是可靠性更低（某条链路 / 设备故障堆叠系统就断开了）&lt;/p&gt;
&lt;p&gt;​	环形连接：增加新的设备需要先断开环，然后增加，但是可靠性更高&lt;/p&gt;
&lt;h5 id=&#34;堆叠系统组建过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠系统组建过程&#34;&gt;#&lt;/a&gt; 堆叠系统组建过程：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. 物理连接，上电
2. 选举主交换机
3. 主交换机收集拓扑信息，分配堆叠ID等
4. 将信息同步给成员交换机后稳定运行               
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;主交换机选举&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主交换机选举&#34;&gt;#&lt;/a&gt; 主交换机选举：&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;比较堆叠系统启动时间，已经稳定运行的优先与处于启动状态的交换机，20s 以内认为是同时启动&lt;/li&gt;
&lt;li&gt;比较堆叠优先级，越大越优&lt;/li&gt;
&lt;li&gt;比较 MAC 地址，越小越优&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;堆叠成员退出&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠成员退出&#34;&gt;#&lt;/a&gt; 堆叠成员退出：&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;从交换机退出，更新拓扑信息进行同步即可&lt;/li&gt;
&lt;li&gt;备交换机退出，重新选举新的备交换机，然后更新拓扑信息&lt;/li&gt;
&lt;li&gt;主交换机退出，备交换机成为新的主交换机，再选举一个备交换机，更新拓扑信息&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;堆叠成员加入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠成员加入&#34;&gt;#&lt;/a&gt; 堆叠成员加入：&lt;/h5&gt;
&lt;p&gt;​	一个未上电的设备连接到堆叠系统中之后再启动，自动成为从交换机&lt;/p&gt;
&lt;h5 id=&#34;堆叠合并&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠合并&#34;&gt;#&lt;/a&gt; 堆叠合并：&lt;/h5&gt;
&lt;p&gt;​	两个稳定运行的堆叠系统连接再一起，两个主交换机之间进行竞选，竞选成功的继续为主交换机，竞选失败的成为从交换机&lt;/p&gt;
&lt;h5 id=&#34;堆叠分裂&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠分裂&#34;&gt;#&lt;/a&gt; 堆叠分裂：&lt;/h5&gt;
&lt;p&gt;​	一个堆叠系统断开后成为多个堆叠吸引&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 主备交换机在一个堆叠系统的更新拓扑信息
2. 主备不在一个堆叠系统，主交换机所在可以重新选举备交换机，备交换机所在备交换机成为主交换机，重新选举新的备交换机
3. 分裂后只有从交换机的重新选举主交换机和备交换机
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注：堆叠系统分裂会造成地址冲突的问题，导致网络故障&lt;/p&gt;
&lt;h6 id=&#34;mad&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mad&#34;&gt;#&lt;/a&gt; MAD：&lt;/h6&gt;
&lt;p&gt;多主检测，检测堆叠分裂后的冲突问题，分裂后的堆叠系统之间进行竞选，竞选成功的正常运行，竞选失败的关闭所有物理端口（除了管理员手动保留的）&lt;/p&gt;
&lt;h6 id=&#34;检测方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#检测方式&#34;&gt;#&lt;/a&gt; 检测方式:&lt;/h6&gt;
&lt;p&gt;​	直连检测：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;中间设备直连检测，通过一台专用的物理设备进行 MAD 检测，不承载其他业务，所有成员交换机与中间设备相连&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Full-mesh 直连检测，所有成员交换机两两互连，通过检测链路交互 MAD 报文检测&lt;/p&gt;
&lt;p&gt;注：直连检测在分裂前不交互报文，分裂后每 1s 交互 MAD 检测报文&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;代理检测：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;单机代理检测：连接方式与中间设备直连检测一直，检测设备检测同时可以承载业务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;堆叠系统互为代理：不同堆叠系统之间互相作为 MAD 检测设备，交互 MAD 报文&lt;/p&gt;
&lt;p&gt;注：代理检测在发生分裂前每 30s 交互 MAD 检测报文，分裂后每 1s 交互&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h6 id=&#34;mad竞选过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mad竞选过程&#34;&gt;#&lt;/a&gt; MAD 竞选过程：&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;多个堆叠系统的主交换机比较启动时间，先启动的优先竞选成功，20s 内认为相同&lt;/li&gt;
&lt;li&gt;主交换机之间比较堆叠优先级，大的竞选成功&lt;/li&gt;
&lt;li&gt;优先级相同比较 MAC 地址，小的竞选成功&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;堆叠升级&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠升级&#34;&gt;#&lt;/a&gt; 堆叠升级：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. 智能升级：所有成员交换机同步主交换机的软件版本和配置信息
2. 传统升级：设置好堆叠系统下一次启动的软件版本和配置信息，然后进行重启，会造成业务中断
3. 平滑升级：将堆叠系统划分为Active区域和Backup区域，Backup区域升级时Active区域承载业务，backup区域升级完再升级Active区域，此时Backup区域承载业务，可以保证业务不中断
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;跨设备链路聚合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#跨设备链路聚合&#34;&gt;#&lt;/a&gt; 跨设备链路聚合：&lt;/h5&gt;
&lt;p&gt;​	设备通过堆叠技术形成一个虚拟交换机后，不同物理交换机上的链路可以进行跨设备的链路聚合，可以对流量进行负载分担&lt;/p&gt;
&lt;h5 id=&#34;流量本地优先转发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#流量本地优先转发&#34;&gt;#&lt;/a&gt; 流量本地优先转发：&lt;/h5&gt;
&lt;p&gt;​	对于成员交换机在转发数据时会进行负载均衡，一部分数据会通过堆叠线缆转发给其他成员交换机承载，此时会造成堆叠线缆负担过重，利用设置流量本地优先转发，只要本交换机存在出接口能够转发数据就不会让其他成员交换机转发&lt;/p&gt;
&lt;h5 id=&#34;集群&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集群&#34;&gt;#&lt;/a&gt; 集群：&lt;/h5&gt;
&lt;p&gt;CSS，将两台支持集群特性的框式交换机虚拟为一台逻辑交换机&lt;/p&gt;
&lt;h6 id=&#34;结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结构&#34;&gt;#&lt;/a&gt; 结构：&lt;/h6&gt;
&lt;p&gt;主交换机，备交换机&lt;/p&gt;
&lt;h6 id=&#34;集群id&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集群id&#34;&gt;#&lt;/a&gt; 集群 ID：&lt;/h6&gt;
&lt;p&gt;在集群中唯一标识，默认集群 ID 为 1&lt;/p&gt;
&lt;h6 id=&#34;css-link&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#css-link&#34;&gt;#&lt;/a&gt; CSS link：&lt;/h6&gt;
&lt;p&gt;集群链路，集群成员交换机之间作用集群链路&lt;/p&gt;
&lt;h6 id=&#34;集群优先级&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集群优先级&#34;&gt;#&lt;/a&gt; 集群优先级：&lt;/h6&gt;
&lt;p&gt;默认为 1，越大越优选举为主交换机&lt;/p&gt;
&lt;h5 id=&#34;集群建立方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集群建立方式&#34;&gt;#&lt;/a&gt; 集群建立方式：&lt;/h5&gt;
&lt;p&gt;​	传统 CSS: 主控板集群卡建立集群和业务口集群，集群卡需要通过专用的集群线缆建立集群，业务空需要加入集群逻辑接口进行集群&lt;/p&gt;
&lt;p&gt;​	CSS2: 第二代集群，通过交互网板集群卡集群&lt;/p&gt;
&lt;p&gt;注：传统 CSS 在转发流量时，同框 / 不同框流量都需要经过主控板，所以两台成员交换机都必须至少有一个可用的主控板&lt;/p&gt;
&lt;p&gt;同框数据经过本地接口版 — 本地主控版 — 本地接口&lt;/p&gt;
&lt;p&gt;不同框数据经过本地接口版 — 本地主控板 — 本地集群卡 — 对端集群卡 — 对端主控板 — 对端接口板&lt;/p&gt;
&lt;p&gt;注：CSS2 转发数据直接通过交换网板，不需要经过主控板，实现了转控分离，具有 “集群主控 1+N 备份” 特性（整个集群只要有一个主控板能正常工作集群就能正常运行）&lt;/p&gt;
</content>
        <updated>2022-12-07T06:00:20.378Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/12/01/2022.11.30/</id>
        <title>HCIP(十三) 2022.11.30</title>
        <link rel="alternate" href="http://example.com/2022/12/01/2022.11.30/"/>
        <content type="html">&lt;h5 id=&#34;rstpr的工作过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rstpr的工作过程&#34;&gt;#&lt;/a&gt; RSTPR 的工作过程：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. 初始所有交换机都认为自己是根桥。端口都为指定端口，处于Discarding状态
2. 所有交换机互相交互RST BPDU ，选举根桥，非根桥选举根端口，链路选举指定端口（选举方式与STP一致）
3. DP指定端口与根端口RP之间通过P/A协商进入转发状态（DP会继续发送P置位RST BPDU,RP收到后设备进入同步状态，端口进入Forwarding状态，并且回复A置位RST BPDU, DP收到A置位RST BPDU 进入Forwarding状态）
4. DP指定端口与AP替代端口之间通过慢收敛过程，DP进入转发状态（DP继续发送P置位RST BPDU ，AP作为阻塞端口 不会发送任何报文，DP无法收到A置位RST BPDU, 一直发送P置位RST BPDU, 直至2个Forward delay 30s 后进入 Forwarding状态 ）
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;mstp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mstp&#34;&gt;#&lt;/a&gt; MSTP&lt;/h4&gt;
&lt;p&gt;​	多生成树协议&lt;/p&gt;
&lt;p&gt;背景：STP/RSTP 单生成树的缺陷&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 流量无法负载分担
2. 二层次优路径
3. 阻塞链路资源利用率低
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在 MSTP 中，交换机之间可以形成多个生成树，不同的生成树之间通过 Instance id 区分，默认存在一个实列 0，针对不同实例交换机可以设置不同的优先级，指定不同交换机作为实例的根桥，通过在不同实例中阻塞不同的端口提高资源利用率以及解决单生成树的缺陷&lt;/p&gt;
&lt;p&gt;每一个多生成树实例称之为一个 MSTI（MSTP Instance）&lt;/p&gt;
&lt;p&gt;MSTP 可以将交换网络划分成不同的 MST 域，一个域可以形成多个生成树，MST 域通过三个参数进行标识：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 相同的域名
2. 相同的修订级别
3. 相同Vlan到实例的映射关系
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;CST：&lt;/p&gt;
&lt;p&gt;公共生成树，将 MST 域当作一个大的交换机，MST 域之间可能会产生环路，通过形成 CST 进行防环&lt;/p&gt;
&lt;p&gt;IST:&lt;/p&gt;
&lt;p&gt;内部生成树，所有 MST 域的交换机都默认存在实例 0，MSTI 0 所形成的生成树就称之为 IST&lt;/p&gt;
&lt;p&gt;CIST&lt;/p&gt;
&lt;p&gt;公共和内部生成树，CST+IST&lt;/p&gt;
&lt;p&gt;SST:&lt;/p&gt;
&lt;p&gt;单生成树，在一个 MSTI 中只存在一个交换机 / 只形成一个生成树&lt;/p&gt;
&lt;p&gt;总根：指整个交换网络中最优的设备（CIST 的根桥）&lt;/p&gt;
&lt;p&gt;域根：包含 IST 域根和 MSTI 域根，IST 域根指 MST 域中离总根最近的设备（不包含总根），MSTI 域根每一个实例生成树中的根桥&lt;/p&gt;
&lt;p&gt;主桥：MST 域离总根最近的设备，包含总根（IST 域根 + 总根）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;角色&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;MST 域&lt;/td&gt;
&lt;td&gt;交换网络被划分成多个域，一个 MST 域内可以包含一台或多台交换机，同属于一个 MST 域的交换机必须配置相同的域名、相同的修订级别、以及相同的 VLAN 映射表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MSTI&lt;/td&gt;
&lt;td&gt;基于 Instance 的生成树&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VLAN 映射表&lt;/td&gt;
&lt;td&gt;VLAN 和 MSTI 之间的映射关系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CST&lt;/td&gt;
&lt;td&gt;公共生成树，连接所有 MST 域的一棵生成树&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IST&lt;/td&gt;
&lt;td&gt;内部生成树，MST 域内 Instance   ID 为 0 的一棵生成树&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CIST&lt;/td&gt;
&lt;td&gt;公共和内部生成树，连接一个交换网络内所有交换设备的生成树&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SST&lt;/td&gt;
&lt;td&gt;单生成树，MST 域内只有一台交换设备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;总根&lt;/td&gt;
&lt;td&gt;CIST 的根桥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IST 域根&lt;/td&gt;
&lt;td&gt;MST 域中，IST 距离总根最近的交换设备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MSTI 域根&lt;/td&gt;
&lt;td&gt;MSTI 的根桥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;主桥&lt;/td&gt;
&lt;td&gt;距离总根最近的交换设备，包括：总根和 IST 域根&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;mstp的端口角色&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mstp的端口角色&#34;&gt;#&lt;/a&gt; MSTP 的端口角色：&lt;/h5&gt;
&lt;p&gt;​	根端口，指定端口，替代端口，备份端口&lt;/p&gt;
&lt;p&gt;​	Master 端口：是一个特殊的域边缘端口，所有域边缘端口中离总根最近的端口&lt;/p&gt;
&lt;p&gt;​	域边缘端口：交换机连接不属于本 MST 域设备的端口&lt;/p&gt;
&lt;p&gt;​	边缘端口：连接终端用户的端口&lt;/p&gt;
&lt;h5 id=&#34;mstp的工作过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mstp的工作过程&#34;&gt;#&lt;/a&gt; MSTP 的工作过程：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. 交换机之间交互MST BPDU 选举出总根
2. MST域间形成CST
3. MST域内形成IST
4. CST+IST =ICST
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;cist计算向量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cist计算向量&#34;&gt;#&lt;/a&gt; CIST 计算向量：&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;根交换设备 ID (选举总根，域根，主桥)&lt;/li&gt;
&lt;li&gt;外部路径开销（选举域根，Master 端口）&lt;/li&gt;
&lt;li&gt;域根 ID（选举域根）&lt;/li&gt;
&lt;li&gt;内部路径开销（选举根端口，指定端口）&lt;/li&gt;
&lt;li&gt;指定交换设备 ID (选举根端口，指定端口)&lt;/li&gt;
&lt;li&gt;指定端口 ID（选举根端口，指定端口）&lt;/li&gt;
&lt;li&gt;接收端口 ID（选举根端口，指定端口）&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;mstp的数据转发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mstp的数据转发&#34;&gt;#&lt;/a&gt; MSTP 的数据转发：&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;域内按照映射的实例生成树转发&lt;/li&gt;
&lt;li&gt;域间按照 CST 转发&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：MSTP 使用增强版 P/A 机制（P，A 同时置位）&lt;/p&gt;
</content>
        <updated>2022-11-30T23:29:55.508Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/11/30/2022.11.29/</id>
        <title>HCIP(十二) 2022.11.29</title>
        <link rel="alternate" href="http://example.com/2022/11/30/2022.11.29/"/>
        <content type="html">&lt;h4 id=&#34;rstp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rstp&#34;&gt;#&lt;/a&gt; Rstp：&lt;/h4&gt;
&lt;p&gt;​	快速生成树协议，相比 STP 加快了收敛速度以及做了相应的改进措施&lt;/p&gt;
&lt;h5 id=&#34;stp的不足&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#stp的不足&#34;&gt;#&lt;/a&gt; STP 的不足：&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;STP 中的阻塞端口没有言明是作为根端口还是指定端口的备份，再进入转发状态时还需要重新选举&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;端口状态中 Distable，Blocking，Listening，都不学习 MAC 地址和转发用户流量，对于用户来说作用一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STP 的 MAX Age 为 20s&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STP 非根交换机再转发配置 BPDU 时需要收到上游转发的 BPDU 才会继续向下转发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STP 只有指定端口会处理次优 BPDU&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STP 中连接终端用户的端口也需要参与生成树计算，用户访问网络需要等待至少 30s 的时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STP 初始化收敛需要两个 Forwarding Delay 转发延迟时间 30s 才能进入稳定运行状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STP 认为一个端口 UP/Down 接收发生拓扑变化，由于发生变化的设备通知根桥后再由根桥通知全网&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;rstp的改进&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rstp的改进&#34;&gt;#&lt;/a&gt; RSTP 的改进：&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;将阻塞端口分为两种角色：AP 替代端口和 BP 备份端口，其中 AP 作为根端口的备份，BP 作为指定端口的备份&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将端口状态前三种结合为一个 Discarding。Leraning 和 Forwarding 不变&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RSTP MAX Age 为三倍的 HelloTime 时间（6s）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RSTP 中配置 BPDU 的转发完全自主进行（不需要等待上游）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RSTP 只要收到了次优 BPDU 就会丢弃并回应自身缓存的最优 BPDU&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RSTP 新增了一个边缘端口角色，连接终端用户的端口设置为边缘端口后可以立即进入 Forwarding 转发状态，不需要参与生成树计算，但是如果边缘端口收到了 BPDU 就会丧失边缘端口属性，就会重新参与生成树计算&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;P/A 机制：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设备之间互相交互 BPDU 后，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更优的一端会继续发送 P 置位的 RST BPDU，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下游收到 P 置位的 BPDU 后进入同步状态（除了接收到的端口和边缘端口外其他所有端口阻塞），&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收到 P 置位 BPDU 的端口进入转发状态，回复 A 置位 RST BPDU&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上游收到 A 置位 RST BPDU 后端口进入转发状态；&lt;/p&gt;
&lt;p&gt;注：如果是收到 P 置位 RST BPDU 的端口是 AP/BP 则不会回复 A 置位 BPDU，上游由于无法收到 A 置位 RST BPDU 进入慢收敛状态，等待两个转发延迟时间 30s 进入转发状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RSTP 认为一个非边缘端口进入 Forwarding 状态就是发生了拓扑变化，并且由发生变化的设备通知全网：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发生变化的端口向外发送 TC 置位 RST BPDU，启动一个计时器（2 倍 HelloTime 时间），超时后停止发送&lt;/li&gt;
&lt;li&gt;收到 TC 置位 RST BPDU 的设备将除了接收到的端口和边缘端口外的其他所有端口学习到的 MAC 地址清空&lt;/li&gt;
&lt;li&gt;继续向下游转发 TC 置位 RST BPDU&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;rstp的保护功能&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rstp的保护功能&#34;&gt;#&lt;/a&gt; RSTP 的保护功能：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. BPDU保护：由于边缘端口收到BPDU后会丧失边缘端口属性，重新参与生成树计算，引起网络重新收敛，为了防止不法分子向边缘渡口发送BPDU，可以开启BPDU保护，开启保护功能后，边缘端口收到BPDU会立即关闭端口
2. 根保护：为了防止非法分子伪造更优的BPDU影响根桥的地位。可以再指定端口开启根保护，收到更优BPDU后会将端口状态置为Discarding，一段时间后没有再收到就可以回到Forwarding，如果一直收到则一直处于Discarding状态
3. 环路保护：为了防止根桥—&amp;gt;RP之间单向链路故障时造成的环路，开启环路保护后，根端口/AP无法收到根桥的BPDU之后会进入Discarding状态，直到重新收到BPDU
4. 防TC-BPDU攻击：由于RSTP设备在收到TC置位 RST BPDU 后删除MAC地址表项，非法分子利用这一特性向网络中发送大量TC RST BPDU，导致设备一直删除表项，数据都是未知帧形成泛洪，开启防TC-BPDU攻击后，可以设置设备单位时间内处理TC报文的次数，降低影响（例如非法分子1s发了10次，设置2S只处理1次）
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1.stp 不会指定 ap 为 dp 或者 rp 的备份端口&lt;/p&gt;
&lt;p&gt;2.stp 的 max age 为 20&lt;/p&gt;
&lt;p&gt;3.stp 的三个端口状态 不会&lt;/p&gt;
</content>
        <updated>2022-11-29T23:30:21.897Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/11/29/2022.11.28/</id>
        <title>HCIP(十一) 2022.11.28</title>
        <link rel="alternate" href="http://example.com/2022/11/29/2022.11.28/"/>
        <content type="html">&lt;h5 id=&#34;路由反射器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由反射器&#34;&gt;#&lt;/a&gt; 路由反射器:&lt;/h5&gt;
&lt;p&gt;在 AS 内部用于传递路由，解决 IBGP 全互联的问题，包含 RR（路由反射器）和 Client 角色，其余为非客户端&lt;/p&gt;
&lt;p&gt;注：IBGP 全互联需要维护大量的 TCP 连接以及 BGP 对等体关系，并且扩展性较差&lt;/p&gt;
&lt;h6 id=&#34;rr反射规则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rr反射规则&#34;&gt;#&lt;/a&gt; RR 反射规则：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;1. 从客户端收到的路由可以反射给所有的非客户端和其他的客户端，其他的客户端以及发送给EBGP的对等体
2. 从非客户端收到的路由可以反射给所有的客户端以及发送给EBGP对等体
3. 从EBGP对等体收到的路由可以反射给所有的客户端和非客户端；
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;路由反射簇&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由反射簇&#34;&gt;#&lt;/a&gt; 路由反射簇：&lt;/h6&gt;
&lt;p&gt;由 RR 以及对应的客户端组成，在 RR 反射路由时，可能会出现环路的问题，可以通过 Originator_ID (起源 ID) 和 Cluster_list (簇列表 / 集群列表) 进行防环&lt;/p&gt;
&lt;p&gt;​	Originator_ID：由收到路由的第一个 RR 所添加，表示路由是哪个路由器发送出来的（通过 Router ID 表示），当路由器收到路由包含自身的 RID 则忽略该路由&lt;/p&gt;
&lt;p&gt;​	Cluster_list：由 Cluster_ID 组成，集群 ID 是用来区分不同的路由反射簇的，没有手工指定的情况下默认 RR 的 Router ID ，当 RR 收到一条路由的 Cluster_LIST 中包含自身的集群 ID 则忽略该路由&lt;/p&gt;
&lt;p&gt;注：起源 ID 和集群列表都属于可选非过渡属性&lt;/p&gt;
&lt;h6 id=&#34;bgp防环&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bgp防环&#34;&gt;#&lt;/a&gt; BGP 防环：&lt;/h6&gt;
&lt;p&gt;​	AS 内：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;无 RR 通过 IBGP 水平分割防环&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有 RR 通过起源 ID 和集群列表防环&lt;/p&gt;
&lt;p&gt;AS 间：通过 AS_path 防环&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;bgp选路原则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bgp选路原则&#34;&gt;#&lt;/a&gt; BGP 选路原则：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;1. 丢弃下一跳不可达的路由
2. 优选Preference_Value值更大的路由
3. 优选Local_Preference数值更大的路由
4. 本地始发的路由优于从对等体学习到的路由，本地始发又分为手动聚合&amp;gt;自动聚合&amp;gt;Network&amp;gt;Incomplete
5. 优选AS_Path短的路由
6. Origin，I&amp;gt;e&amp;gt;?.
7. 优选MED值小的路由 , 默认不比较来自不同AS路由的MED值，可以开启强制比较（**compare-different-as-med**）
8. 从EBGP对等体学习到的优于IBGP对等体学习的
9. 优选下一跳IGP开销小的路由
10. 优选Cluster_List短的路由
11. 优选Originator_ID小的路由
12. 优选Router ID小的对等体学习到的路由
13. 优选IP地址小的对等体 学习的路由
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注：BGP 支持负载分担（最多 8 条），当选路规则前 9 条都相同并且 AS_Path 属性完全相同的情况下可以进行负载分担，成为等价路由加入 IP 路由表（AS_PATH 属性完全相同指所经过的 AS 号完全相同），但是 BGP 路由表中还是会选出最优的那条路由。默认为 1 条&lt;/p&gt;
&lt;p&gt;BGP 支持聚合：&lt;/p&gt;
&lt;p&gt;​	手动和自动&lt;/p&gt;
&lt;p&gt;手动聚合：将一些具有相似前缀的路由聚合为一个网段，可以完全控制掩码长度&lt;/p&gt;
&lt;p&gt;自动聚合：针对引入的路由进行聚合，自动聚合为有类路由（A,B,C 类），无法控制掩码（有类路由存在自然掩码）。&lt;/p&gt;
</content>
        <updated>2022-11-28T23:24:49.162Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/11/29/2022.11.25/</id>
        <title>HCIP(十) 2022.11.25</title>
        <link rel="alternate" href="http://example.com/2022/11/29/2022.11.25/"/>
        <content type="html">&lt;h5 id=&#34;bgp的属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bgp的属性&#34;&gt;#&lt;/a&gt; BGP 的属性：&lt;/h5&gt;
&lt;p&gt;​	公认必遵：表示运行了 BGP 的路由器都能识别，并且必须携带在 Update 报文中，不携带就会出错&lt;/p&gt;
&lt;p&gt;​	公认任意：所有 BGP 路由都能识别，可以携带也可以不携带，不携带也不会出错&lt;/p&gt;
&lt;p&gt;​	可选过渡：BGP 路由器可以识别也可以不识别，不识别也能继续向下传递&lt;/p&gt;
&lt;p&gt;​	可选非过渡：BGP 路由器可以识别也可以不识别，不识别不能向下传递&lt;/p&gt;
&lt;h6 id=&#34;as_path&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#as_path&#34;&gt;#&lt;/a&gt; AS_path:&lt;/h6&gt;
&lt;p&gt;​	AS 路径信息，属于公认必遵属性，用来表示路由经过了哪些 AS，每经过一个 AS 就把该 AS 号添加到 AS_Path 的最前面，可以用来选路以及防环&lt;/p&gt;
&lt;p&gt;​	防环：当路由器收到一条路由的 AS_path 中携带了自身所在的 AS 号，不接收该路由&lt;/p&gt;
&lt;p&gt;​	选路：当存在去往同一个目的地的多条路由时，优先选择 AS_path 更短的路由&lt;/p&gt;
&lt;p&gt;​	AS_Sep：有序 AS_Path，后经过的 AS 号添加到 AS_path 前面&lt;/p&gt;
&lt;p&gt;​	AS_Set：无序 AS_Path, 当路由聚合后，无法判断聚合前经过的 AS 先后顺序，可以携带无序的 AS_Path&lt;/p&gt;
&lt;h6 id=&#34;origin&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#origin&#34;&gt;#&lt;/a&gt; Origin：&lt;/h6&gt;
&lt;p&gt;​	起源属性，属于公认必遵属性，用来表示路由是如何进入 BGP 的，分为 IGP（i）,EGP（e）,Incomplete（?）,&lt;/p&gt;
&lt;p&gt;如果是 i，表示路由是通告 Network 宣告进入 BGP，如果是 e，表示路由是通过 EGP 学习到的（由于 EGP 已经被淘汰，正常情况下不存在，但是可以通过路由策略修改），如果是？，表示未知，一般指引入的路由，起源属性可以用于选路：i &amp;gt; e &amp;gt; ?&lt;/p&gt;
&lt;h6 id=&#34;next_hop&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#next_hop&#34;&gt;#&lt;/a&gt; Next_Hop ：&lt;/h6&gt;
&lt;p&gt;下一跳属性，属于公认必遵属性，表示访问路由的下一跳地址，路由器本地始发的路由在传递给 BGP 对等体时，下一跳地址更新源地址（与对端建立关系的地址），如果不是本地始发路由，下一跳地址在不同情况下不同：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 将路由传递给EBGP对等体时，正常情况为自己的更新源地址
2. 将路由传递给IBGP对等体，下一跳地址不变（下一跳不可达时路由无效，要使路由生效需要配置下一跳本地：next-hop-local）
3. 将BGP路由发送给EBGP对等体时，如果自身去往该路由的下一跳与要发布路由的EBGP对等体处于相同网段，下一跳地址不变 
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;local-preference&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#local-preference&#34;&gt;#&lt;/a&gt; Local-Preference :&lt;/h6&gt;
&lt;p&gt;本地优先级，属于公认任意属性，用来指导数据如何出 AS，只在 AS 内部有效，缺省值 100，数值为越大越优，可以用来选路&lt;/p&gt;
&lt;h6 id=&#34;community&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#community&#34;&gt;#&lt;/a&gt; Community：&lt;/h6&gt;
&lt;p&gt;团体属性，属于可选过渡属性，有两个作用：&lt;/p&gt;
&lt;p&gt;①给路由加上一个团体属性值，将路由分为不同类别，类似于打标机的作用，针对不同的团体属性可以执行不同的策略 (AA:NN 形式 / 十进制形式，AA 为 AS 号，NN 为自定义数值)&lt;/p&gt;
&lt;p&gt;②限制路由的传递范围，四大公认团体属性，internet 整个网络传递，No-Advertise 不传递，No-Export 本 AS 内传递，NO-export-Sub Confed 联盟本子 AS 内传递&lt;/p&gt;
&lt;h6 id=&#34;med&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#med&#34;&gt;#&lt;/a&gt; MED:&lt;/h6&gt;
&lt;p&gt;多出口鉴别器，属于可选非过渡属性，用于指导数据如何进入 AS，MED 值越小越优，默认只比较来自相同 AS 路由的 MED 值，并且 MED 只在相邻的两个 AS 之间有效&lt;/p&gt;
&lt;p&gt;​	注：如果是本地的直连 / 静态路由注入到 BGP 中，传递给 EBGP 邻居时，默认 MED 值为 0&lt;/p&gt;
&lt;p&gt;​		如果是通过 IGP 学习到的路由注入到 BGP 中，默认 MED 值为该路由器去往路由的 IGP 开销&lt;/p&gt;
&lt;p&gt;​		可以修改路由器本地的默认 MED 值（只对引入 / 聚合的路由生效）&lt;/p&gt;
&lt;h6 id=&#34;atomic_aggregate&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#atomic_aggregate&#34;&gt;#&lt;/a&gt; Atomic_Aggregate:&lt;/h6&gt;
&lt;p&gt;​	原子聚集体，公认任意属性，携带在聚合路由中，用来表示该路由为聚合路由&lt;/p&gt;
&lt;h6 id=&#34;aggregate&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#aggregate&#34;&gt;#&lt;/a&gt; Aggregate：&lt;/h6&gt;
&lt;p&gt;​	聚合属性，可选过渡属性，携带在聚合路由中，用来表示聚合路由的聚合点（聚合所在的 AS 号以及 BGP 路由器的 ID）&lt;/p&gt;
&lt;h6 id=&#34;preference_value&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#preference_value&#34;&gt;#&lt;/a&gt; Preference_Value:&lt;/h6&gt;
&lt;p&gt;协议首选值，华为的私有属性，只在设有本地有效，可用于选路，权重值越大越优，范围 0-65535&lt;/p&gt;
&lt;p&gt;默认为 0&lt;/p&gt;
&lt;h6 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结：&lt;/h6&gt;
&lt;p&gt;​	公认必遵：AS_path（AS 路径信息），Origin（起源属性），Next_Hop （下一跳属性）&lt;/p&gt;
&lt;p&gt;​	公认任意：Local-Preference （本地优先级），Atomic_Aggregate（原子聚集体）&lt;/p&gt;
&lt;p&gt;​	可选过渡：Community（团体属性），Aggregate（聚合属性）&lt;/p&gt;
&lt;p&gt;​	可选非过渡：MED（多出口鉴别器）&lt;/p&gt;
</content>
        <updated>2022-11-28T23:24:49.159Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/11/25/2022.11.24/</id>
        <title>HCIP(九) 2022.11.24</title>
        <link rel="alternate" href="http://example.com/2022/11/25/2022.11.24/"/>
        <content type="html">&lt;h4 id=&#34;bgp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bgp&#34;&gt;#&lt;/a&gt; BGP：&lt;/h4&gt;
&lt;h6 id=&#34;as&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#as&#34;&gt;#&lt;/a&gt; AS:&lt;/h6&gt;
&lt;p&gt;自治系统，AS 和 AS 之间通过 AS 号进行区分，AS 号范围 1-65535，其中 1-64511 为公有 AS 号，64512-65535 为私有 AS 号&lt;/p&gt;
&lt;h5 id=&#34;bgp-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bgp-2&#34;&gt;#&lt;/a&gt; BGP:&lt;/h5&gt;
&lt;p&gt;边界网关协议，用于 AS 与 AS 之间传递和控制路由，属于路径矢量路由协议&lt;/p&gt;
&lt;p&gt;BGP 是应用层协议，基于 TCP 的&lt;strong&gt; 179 端口&lt;/strong&gt;建立连接，只有建立了 TCP 连接，才能建立 BGP 连接，由于 TCP 为单播建立连接，所以 BGP 需要手工指定邻居，又因为 TCP 连接建立的基础是网络可达，所以 BGP 只要网络可达就可以建立邻居关系&lt;/p&gt;
&lt;h6 id=&#34;bgp的邻居类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bgp的邻居类型&#34;&gt;#&lt;/a&gt; BGP 的邻居类型：&lt;/h6&gt;
&lt;p&gt;BGP 邻居关系称之为对等体关系&lt;/p&gt;
&lt;p&gt;​	IBGP 对等体：处于相同 AS 的两个设备之间建立的 BGP 对等体关系，一般采用环回口建立（需要指定更新源地址为环回口）&lt;/p&gt;
&lt;p&gt;​	peer 对端 IP 地址 as-number 对端 AS 号  // 接口地址建立&lt;/p&gt;
&lt;p&gt;​	Peer 对端 ip 地址 Connect-interface loopback0// 环回口建立必须修改&lt;/p&gt;
&lt;p&gt;​	EBGP 对等体：处于不同 AS 的两个设备之间建立的 BGP 对等体关系，一般采用直连接口建立，如果用环回口建立需要指定 ebgp 多跳（EBGP 对等体建立时默认 TTL=1）&lt;/p&gt;
&lt;p&gt;​	peer 对端 IP 地址 as-number 对端 AS 号&lt;/p&gt;
&lt;p&gt;​	Peer 对端 ip 地址 Connect-interface loopback0// 环回口建立必须修&lt;/p&gt;
&lt;p&gt;​	peer 对等体地址 ebgp-max-hop 1-255（不设具体数据直接回车为最大值）&lt;/p&gt;
&lt;h6 id=&#34;bgp的报文类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bgp的报文类型&#34;&gt;#&lt;/a&gt; BGP 的报文类型：&lt;/h6&gt;
&lt;p&gt;​	OPEN 报文：协商参数，建立对等体关系（版本，AS 号，BGP ID ,Hold Time）&lt;/p&gt;
&lt;p&gt;​	UPdate 报文：传递路由信息（发布和撤销路由）&lt;/p&gt;
&lt;p&gt;​	Notification：差错报文，当邻居关系发送错误，通过该报文通知对等体断开邻居关系&lt;/p&gt;
&lt;p&gt;​	Keepalive：保活报文，周期性 60s 发送，用来维护对等体关系，&lt;/p&gt;
&lt;p&gt;​	Route-refrash：路由刷新报文，当配置了路由策略，路由信息发生变化，发送该报文通知对等体&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;报文名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;作用&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;发送时刻&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Open&lt;/td&gt;
&lt;td&gt;协商 BGP 对等体参数，建立对等体关系&lt;/td&gt;
&lt;td&gt;BGP   TCP 连接建立成功之后&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Update&lt;/td&gt;
&lt;td&gt;发送 BGP 路由更新&lt;/td&gt;
&lt;td&gt;BGP 对等体关系建立之后有路由需要发送或路由变化时向对等体发送 Update 报文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Notification&lt;/td&gt;
&lt;td&gt;报告错误信息，中止对等体关系&lt;/td&gt;
&lt;td&gt;当 BGP 在运行中发现错误时，发送 Notification 报文将错误通告给 BGP 对等体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Keepalive&lt;/td&gt;
&lt;td&gt;标志对等体建立，维持 BGP 对等体关系&lt;/td&gt;
&lt;td&gt;BGP 路由器收到对端发送的 Keepalive 报文，将对等体状态置为已建立，同时后续定期发送 keepalive 报文用于保持连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Route-refresh&lt;/td&gt;
&lt;td&gt;用于在改变路由策略后请求对等体重新发送路由信息。只有支持路由刷新能力的 BGP 设备会发送和响应此报文&lt;/td&gt;
&lt;td&gt;当路由策略发生变化时，触发请求对等体重新通告路由&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h6 id=&#34;bgp的状态机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bgp的状态机&#34;&gt;#&lt;/a&gt; BGP 的状态机：&lt;/h6&gt;
&lt;p&gt;​	Idle：初始状态，等待 Start 事件（peer…）&lt;/p&gt;
&lt;p&gt;​	Connect: 尝试建立 TCP 连接，并启动一个计时器 32s，如果建立成功，则进入 Opensent 状态，建立失败进入 Active 状态，超时重启计时器停留在 connect 状态&lt;/p&gt;
&lt;p&gt;​	Active：重新启动计时器，建立 TCP 连接，成功进入 Opensent，超时回到 connect，失败停留在 Active&lt;/p&gt;
&lt;p&gt;​	Opensent：TCP 连接建立成功，开始发送 Open 报文，协商参数&lt;/p&gt;
&lt;p&gt;​	Openconfirm：收到了 OPEN 报文并且协商成功进入该状态，开始发送 Keepalive 报文&lt;/p&gt;
&lt;p&gt;​	Established：收到了 Keepalive 报文，对等体关系建立成功&lt;/p&gt;
&lt;p&gt;注：在此期间只要收到了 Notification 报文都会回到 Idle 状态&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Cz.j.j%5CDesktop%5Chcip%E5%9F%B9%E8%AE%AD%5Cassets%5C1669276103229.png&#34; alt=&#34;1669276103229&#34;&gt;&lt;/p&gt;
&lt;p&gt;看看：：：：&lt;/p&gt;
&lt;p&gt;・Idle 状态是 BGP 初始状态。在 Idle 状态下，BGP 拒绝对等体发送的连接请求。只有在收到本设备的 Start 事件后，BGP 才开始尝试和其它 BGP 对等体进行 TCP 连接，并转至 Connect 状态。&lt;/p&gt;
&lt;p&gt;▫Start 事件是由一个操作者配置一个 BGP 过程，或者重置一个已经存在的过程或者路由器软件重置 BGP 过程引起的。&lt;/p&gt;
&lt;p&gt;▫任何状态中收到 Notification 报文或 TCP 拆链通知等 Error 事件后，BGP 都会转至 Idle 状态。&lt;/p&gt;
&lt;p&gt;・在 Connect 状态下，BGP 启动连接重传定时器（Connect Retry），等待 TCP 完成连接。&lt;/p&gt;
&lt;p&gt;▫如果 TCP 连接成功，那么 BGP 向对等体发送 Open 报文，并转至 OpenSent 状态。&lt;/p&gt;
&lt;p&gt;▫如果 TCP 连接失败，那么 BGP 转至 Active 状态。&lt;/p&gt;
&lt;p&gt;▫如果连接重传定时器超时，BGP 仍没有收到 BGP 对等体的响应，那么 BGP 继续尝试和其它 BGP 对等体进行 TCP 连接，停留在 Connect 状态。&lt;/p&gt;
&lt;p&gt;・在 Active 状态下，BGP 总是在试图建立 TCP 连接。&lt;/p&gt;
&lt;p&gt;▫如果 TCP 连接成功，那么 BGP 向对等体发送 Open 报文，关闭连接重传定时器，并转至 OpenSent 状态。&lt;/p&gt;
&lt;p&gt;▫如果 TCP 连接失败，那么 BGP 停留在 Active 状态。&lt;/p&gt;
&lt;p&gt;▫如果连接重传定时器超时，BGP 仍没有收到 BGP 对等体的响应，那么 BGP 转至 Connect 状态。&lt;/p&gt;
&lt;h6 id=&#34;bgp注入路由的方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bgp注入路由的方式&#34;&gt;#&lt;/a&gt; BGP 注入路由的方式：&lt;/h6&gt;
&lt;p&gt;​	两种：network 和 import-route&lt;/p&gt;
&lt;p&gt;​	network：只要是本地 IP 路由表中存在的路由都可以宣告到 BGP 中（掩码要一致）&lt;/p&gt;
&lt;p&gt;​	Import-route：可以将不属于 BGP 的路由引入，如直连，静态，OSPF 等&lt;/p&gt;
&lt;p&gt;​	BGP 路由表中：* 表示有效路由 ，&amp;gt; 表示最优路由&lt;/p&gt;
&lt;p&gt;​	BGP 发布路由时通过 Update 报文携带 NLRI（网络层可达信息，携带发布的路由前缀和前缀长度）和路径属性（用于选路和防环），撤销路由通过 Update 报文中的 withdraw，携带撤销的路由前缀和前缀长度&lt;/p&gt;
&lt;p&gt;注：在 BGP 中，认为目的地与下一跳一致的路由无效&lt;/p&gt;
&lt;h6 id=&#34;bgp的通告原则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bgp的通告原则&#34;&gt;#&lt;/a&gt; BGP 的通告原则：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;1. 只发布有效并且最优的路由给对等体
2. 从EBGP对等体学习到的路由可以传给所有邻居
3. 从IBGP对等体学习的路由不能传给其他的IBGP（IBGP水平分割，为了防环）
4. BGP和IGP同步（IBGP和IGP同步，当设备将BGP路由发布给IBGP对等体之前，会先检查本地IGP路由表是否存在该路由，如果存在则发送，不存在则不发，为了避免路由黑洞，华为默认永不开启）
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;路由黑洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由黑洞&#34;&gt;#&lt;/a&gt; 路由黑洞：&lt;/h6&gt;
&lt;p&gt;由于 BGP 可以跨跳建立对等体关系，所以导致中间设备没有运行 BGP，数据到了这里之后由于没有路由被丢弃&lt;/p&gt;
&lt;h6 id=&#34;解决方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方法&#34;&gt;#&lt;/a&gt; 解决方法：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;1. IBGP 全互联
2. 将BGP引入IGP
3. 物理直连
4. 隧道
5. MPLS
&lt;/code&gt;&lt;/pre&gt;
</content>
        <updated>2022-11-24T23:37:56.593Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/11/24/2022.11.22/</id>
        <title>HCIP(七) 2022.11.22</title>
        <link rel="alternate" href="http://example.com/2022/11/24/2022.11.22/"/>
        <content type="html">&lt;h4 id=&#34;路由策略与路由控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由策略与路由控制&#34;&gt;#&lt;/a&gt; 路由策略与路由控制：&lt;/h4&gt;
&lt;p&gt;路由策略：可以针对路由的发布，接收，引入进行影响，影响路由的长度 / 学习，从而影响数据的转发可达性&lt;/p&gt;
&lt;p&gt;路由匹配工具：匹配满足条件的路由，最终的动作由路由策略工具决定&lt;/p&gt;
&lt;h6 id=&#34;acl访问控制列表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#acl访问控制列表&#34;&gt;#&lt;/a&gt; ACL：访问控制列表&lt;/h6&gt;
&lt;p&gt;分类：基本 ACL（2000-2999），高级 ACL（3000-3999），二层 ACL（4000-4999），用户自定义 ACL（5000-5999），用户 ACL（6000-6999）&lt;/p&gt;
&lt;p&gt;注：只有基本 ACL 可以匹配路由（路由默认拒绝）&lt;/p&gt;
&lt;p&gt;一个 ACL 由多条规则组成，规则之间通过 rule id 进行区分，默认情况下按照 rule id 进行从小到大进行匹配（配置顺序），只要匹配中其中一个即停止匹配，执行相应的动作（permit/deny），如果所有规则都没有匹配上，是路由默认拒绝，是数据默认通过&lt;/p&gt;
&lt;p&gt;注：如果是自动排序则是按照 rule 规则的精确度匹配，越精确的越优先匹配（两种排序发送）&lt;/p&gt;
&lt;p&gt;* 通配符：32bit，与前缀一一对应，通配符为 0 表示对应的前缀必须相同，为 1 表示任意取值&lt;/p&gt;
&lt;h6 id=&#34;ip-perfix-list&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ip-perfix-list&#34;&gt;#&lt;/a&gt; IP-Perfix List：&lt;/h6&gt;
&lt;p&gt;IP 前缀列表（只能匹配路由）&lt;/p&gt;
&lt;p&gt;一个前缀列表可以由多个索引组成（index），匹配路由时按照索引号从小到大匹配，步长值为 10，一条索引由动作，前缀，掩码以及掩码范围组成，动作为 permit/deny，前缀和掩码可以确定匹配的路由前缀，掩码范围可以确定匹配的路由掩码长度，如果没有匹配任何 index，默认拒绝&lt;/p&gt;
&lt;p&gt;注：只有一种排序方式，没有自动排序&lt;/p&gt;
&lt;p&gt;配置：&lt;/p&gt;
&lt;p&gt;[Huawei]ip ip-prefix name1 index 10 permit 10.1.1.1 24 greater-equal 26 less-equal 29  &lt;a href=&#34;//xn--name11010-u02ox2vnhk08fm5li99bgj8cw0hri2d.1.1.0/24%E6%8E%A9%E7%A0%81%E8%8C%83%E5%9B%B4%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8E26%E5%B0%8F%E4%BA%8E%E7%AD%89%E4%BA%8E29%E7%9A%84%E8%B7%AF%E7%94%B1%E9%80%9A%E8%BF%87&#34;&gt;// 允许名字 name1 索引号 10 网段 10.1.1.0/24 掩码范围大于等于 26 小于等于 29 的路由通过&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;acl和ip-perfix-list的区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#acl和ip-perfix-list的区别&#34;&gt;#&lt;/a&gt; ACL 和 IP-Perfix List 的区别：&lt;/h6&gt;
&lt;p&gt;1、ACL 可以匹配路由以及数据，前缀列表只能匹配路由&lt;/p&gt;
&lt;p&gt;2、ACL 匹配路由时只能匹配前缀，无法匹配前缀长度，前缀列表可以匹配前缀长度&lt;/p&gt;
&lt;p&gt;3、ACl 有配置顺序及自动排序，前缀列表只能按照索引号从小到大匹配&lt;/p&gt;
&lt;p&gt;4、ACl 默认步长为 5，前缀列表默认步长为 10&lt;/p&gt;
&lt;p&gt;5、ACl 按照进程号分为多种，前缀列表就一种&lt;/p&gt;
&lt;h6 id=&#34;路由策略工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由策略工具&#34;&gt;#&lt;/a&gt; 路由策略工具：&lt;/h6&gt;
&lt;p&gt;Filter-policy：可以针对路由的发布，接收，引入进行影响，本身没有动作，可以继承匹配工具的动作，匹配工具为 permit 就是允许，匹配工具为 deny 就是拒绝，可以应用于各个协议视图下，如果应用于距离矢量路径协议，&lt;strong&gt;可以在入方向（import）和出方向（export）对路由进行影响，如果是链路状态路由协议，入方向只能影响自己本地不加入 IP 路由表，出方向只能影响引入的路由（引入算发送，是发给邻居传递路由），不能影响链路状态信息的传递&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例：[Huawei-ospf-1] filter-policy 2000 import&lt;/p&gt;
&lt;p&gt;1、先定义匹配工具规则&lt;/p&gt;
&lt;p&gt;2、再通过 filter-policy 调用匹配工具&lt;/p&gt;
&lt;p&gt;[Huawei-ospf-100] filter-policy acl-number/ip-prefix name import  // 对 OSPF 接收的路由进行过滤（调用匹配工具，acl 和前缀列表）&lt;/p&gt;
&lt;p&gt;[Huawei-ospf-100] filter-policy acl-number/ip-prefix name export  // 对 OSPF 引入的路由对外发布时过滤（调用匹配工具，acl 和前缀列表）&lt;/p&gt;
&lt;h6 id=&#34;route-policy&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#route-policy&#34;&gt;#&lt;/a&gt; Route-Policy：&lt;/h6&gt;
&lt;p&gt;不仅可以对路由的发布，接收，引入进行影响，还可以修改路由的属性&lt;/p&gt;
&lt;p&gt;一个 route-policy 可以定义多个 node 节点，一个 node 节点中可以包含多个 if-match 条件语句和 apply 执行语句，其中 node 节点之间是 “或” 的关系（匹配到一个 node 节点就停止匹配），按照 node 节点号从小到大匹配，node 节点中的 if-match 语句之间是 “与” 的关系，只有满足所有 if-match 语句条件，才是匹配了该 node 节点，如果一个 node 节点都未匹配，底层默认拒绝，node 节点也有匹配模式，permit、deny，只有在 permit 的模式下才会定义 apply 语句&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;匹配工具 ACL 和 ip 前缀&lt;/th&gt;
&lt;th&gt;Node 节点&lt;/th&gt;
&lt;th&gt;结果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permit&lt;/td&gt;
&lt;td&gt;Permit&lt;/td&gt;
&lt;td&gt;允许通过，运行 apply 语句&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Permit&lt;/td&gt;
&lt;td&gt;Deny&lt;/td&gt;
&lt;td&gt;拒绝通过&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Deny&lt;/td&gt;
&lt;td&gt;Permit/Deny&lt;/td&gt;
&lt;td&gt;不匹配该 node 节点，继续匹配下一个节点&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;[Huawei] route-policy 1 permit node 10  // 创建策略 1 节点 10 并进入视图&lt;/p&gt;
&lt;p&gt;[Huawei-route-policy] if-match acl 2000  // 匹配条件调用 ACL2000&lt;/p&gt;
&lt;p&gt;[Huawei-route-policy] apply cost-type type-1  // 匹配中时执行将开销改为 1 的操作&lt;/p&gt;
&lt;p&gt;[Huawei-ospf-1] filter-policy route-policy 1 import  // 接收路由时调用策略 1&lt;/p&gt;
&lt;p&gt;[Huawei-ospf-1] import-route direct route-policy 1  // 引入路由时调用策略 1&lt;/p&gt;
</content>
        <updated>2022-11-23T23:29:59.803Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/11/24/2022.11.21/</id>
        <title>HCIP(六) 2022.11.21</title>
        <link rel="alternate" href="http://example.com/2022/11/24/2022.11.21/"/>
        <content type="html">&lt;h6 id=&#34;isis在广播网络lsdb的同步过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#isis在广播网络lsdb的同步过程&#34;&gt;#&lt;/a&gt; ISIS 在广播网络 LSDB 的同步过程：&lt;/h6&gt;
&lt;p&gt;​	在广播网络中，邻接关系建立完成后，会选举 DIS，所有路由器都将自己的 LSP 发往组播地址，DIS 就会有所有的 LSP 信息构建完整的 LSDB，之后通过周期性发送 CSNP 报文进行同步&lt;/p&gt;
&lt;p&gt;​	如果此时新加入一台设备：&lt;/p&gt;
&lt;p&gt;1. 新加入设备将自己的 LSP 发往组播地址，DIS 收到后加入 LSDB，后续发 CSNP 报文携带摘要&lt;/p&gt;
&lt;p&gt;2. 信加入设备收到 DIS 的 CSNP 报文后可以判断自己缺少了那些 LSP, 然后发送 PSNP 报文进行请求&lt;/p&gt;
&lt;p&gt;3.DIS 收到请求后，将完整的 LSP 信息发送给新加入的设备&lt;/p&gt;
&lt;p&gt;注：广播网络中 PSNP 报文只有请求的作用，不需要确认，通过 DIS 周期性发送 CSNP 报文进行隐式确认&lt;/p&gt;
&lt;h6 id=&#34;组播地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#组播地址&#34;&gt;#&lt;/a&gt; 组播地址：&lt;/h6&gt;
&lt;p&gt;level-1：0180-c200-0014&lt;/p&gt;
&lt;p&gt;level-2：0180-c200-0015&lt;/p&gt;
&lt;h6 id=&#34;p2p环境下lsdb的同步过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#p2p环境下lsdb的同步过程&#34;&gt;#&lt;/a&gt; P2P 环境下 LSDB 的同步过程：&lt;/h6&gt;
&lt;p&gt;R1— — R2&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设备建立完邻接关系后，互相交互 CSNP 报文，判断 LSDB 是否同步&lt;/li&gt;
&lt;li&gt;如果没有同步，通过发送 PSNP 报文向对方请求&lt;/li&gt;
&lt;li&gt;收到 PSNP 请求的设备会将完整的 LSP 信息发送给对端，并启动一个重传计时器 5s&lt;/li&gt;
&lt;li&gt;收到完整 LSP 信息的设备会回复 PSNP 报文进行确认&lt;/li&gt;
&lt;li&gt;如果发送完整 LSP 信息的设备会在重传计时器超时没有收到确认报文，会将 LSP 进行重传，直至收到确认报文为止&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ISIS 进程号（1-65535）&lt;/p&gt;
&lt;p&gt;network-entity 49.0001.0000.0000.0001.00&lt;/p&gt;
&lt;p&gt;is-level 路由器类型&lt;/p&gt;
&lt;p&gt;接口宣告：ISIS enable 进程号&lt;/p&gt;
&lt;p&gt;dis isis lsdb 0000.0000.0001.00-00 verbose 详细信息&lt;/p&gt;
&lt;h6 id=&#34;isis的路由计算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#isis的路由计算&#34;&gt;#&lt;/a&gt; ISIS 的路由计算：&lt;/h6&gt;
&lt;p&gt;level-1 路由器：本区域内通过交互 Level-1LSP 进行路由计算，其他区域通过自己产生的默认路由访问&lt;/p&gt;
&lt;p&gt;level-1/2 路由器：访问 Level-1 区域通过 Level-1LSP 计算，访问 Level-2 区域通过 Level-2LSP 计算，默认会将 Level-1 区域的路由传递给 Level-2 区域，不会将 L-2 的路由传递给 L-1 区域&lt;/p&gt;
&lt;p&gt;Level-2 区域路由器：通过交互 Level-2LSP 进行计算（去往 level-1 区域通过 Level-1/2 的 LSP 计算）&lt;/p&gt;
&lt;h6 id=&#34;att置位条件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#att置位条件&#34;&gt;#&lt;/a&gt; ATT 置位条件：&lt;/h6&gt;
&lt;p&gt;​	①是一个 Level-1/2 路由器&lt;/p&gt;
&lt;p&gt;​	②建立了 Level-2 邻接关系&lt;/p&gt;
&lt;p&gt;​	③建立了 Level-1 邻接关系&lt;/p&gt;
&lt;p&gt;注：Level-1 路由器的默认路由是通过收到 Level-1/2 设备的 ATT 置位的 L-1LSP 自动产生的，下一跳指向该 L-1/2 设备&lt;/p&gt;
&lt;h6 id=&#34;路由渗透&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由渗透&#34;&gt;#&lt;/a&gt; 路由渗透：&lt;/h6&gt;
&lt;p&gt;​	由于 Level-1 路由器通过默认路由访问 Level-2 区域，可能会产生次优路径，可以在 Level-1/2 设备上将 Level-2 区域的路由引入到 Level-1 区域，让 Level-1 路由器学习到 Level-2 区域的明细路由，避免次优路径&lt;/p&gt;
&lt;p&gt;​	在 isis 下配置 impact isis l2 into l1&lt;/p&gt;
&lt;h6 id=&#34;lsp的新旧比较&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lsp的新旧比较&#34;&gt;#&lt;/a&gt; LSP 的新旧比较：&lt;/h6&gt;
&lt;p&gt;先比较序列号是否相同，不相同则取序列号大的为优&lt;/p&gt;
&lt;p&gt;相同在比较保活时间是否 = 0s，是则保活时间为 0 的为优&lt;/p&gt;
&lt;p&gt;不为 0，在比较校验和是否相同，不相同取校验和大的为优&lt;/p&gt;
&lt;p&gt;相同则不处理该 LSP.&lt;/p&gt;
&lt;h6 id=&#34;isis的认证&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#isis的认证&#34;&gt;#&lt;/a&gt; ISIS 的认证：&lt;/h6&gt;
&lt;p&gt;​	接口认证：针对 ISIS 邻接关系的建立进行认证，认证通过才可以建立邻接关系&lt;/p&gt;
&lt;p&gt;​	区域认证：针对 Level-1 的 LSDB 进行认证，开启认证后会在发送的 Level-1 报文中携带认证信息（Level-1LSP,Level-1SNP）, 对收到的报文也会进行认证检查，检查通过才可以加入 LSDB&lt;/p&gt;
&lt;p&gt;​	路由器认证：针对 Level-2 的 LSDB 进行认证，开启认证后会在发送的 Level-2 报文中携带认证信息，对收到的报文也会进行认证检查&lt;/p&gt;
</content>
        <updated>2022-11-23T23:29:59.801Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/11/24/2022.11.17/</id>
        <title>HCIP(五) 2022.11.17</title>
        <link rel="alternate" href="http://example.com/2022/11/24/2022.11.17/"/>
        <content type="html">&lt;h6 id=&#34;isis建立邻接关系的原则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#isis建立邻接关系的原则&#34;&gt;#&lt;/a&gt; ISIS 建立邻接关系的原则：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;1. 只有同一层次的路由器之间才能建立邻接关系（level 1/2 即属于level 1 有属于level 2）
2. 对于level 1 路由器来说，area id 必须一致
3. 两端设备的ISIS网络类型必须一致
4. ISIS两端的ip地址需要处于同一网段（特殊情况除外- - -&amp;gt;p2p）
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;hello-报文格式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hello-报文格式&#34;&gt;#&lt;/a&gt; hello 报文格式  ：&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reserved/Circuit Type：用于表示路由器类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Source ID&lt;/strong&gt;：发送设备的 System id&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Holding Time ：邻接关系的失效时间，一般为 3 倍的 hello 间隔&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PDU length：整个报文的长度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Priority&lt;/strong&gt;：优先级，用于选举 DIS 时使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LAN ID:DIS 的 system id 加上一个字节的 01/10, 只存在于广播网络中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Local Circuit ID：本地链路 ID，用于 P2P 网络类型协商&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Variable Length  Fields：可选择携带的某些参数值或者可选功能&lt;/p&gt;
&lt;p&gt;​	采用 TLV 结构进行携带，需要提供某种功能时，只需要加载对于对应的 TLV 即可&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;广播型网络邻接关系的建立三次握手&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#广播型网络邻接关系的建立三次握手&#34;&gt;#&lt;/a&gt; 广播型网络邻接关系的建立：（三次握手）&lt;/h6&gt;
&lt;p&gt;​	R1&amp;lt;——————————&amp;gt;R2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 设备初始状态都处于down状态
2. 运行或激活接口ISIS后，发送hello报文，假设R1先发送Hello 报文
3. R2收到R1的hello 报文后，状态转变为initial ，同时将R1的System id 写入自己hello 的邻接列表
4. R2 发送hello 报文，邻接列表中含有R1的System id
5. R1收到后，将R2列为自己的邻接路由器，同时将R2的System id 列入自己的hello 报文中，发送给R2
6. R2收到R1 发送的hello 报文后，将自己的状态转变为UP状态，此时邻接关系建立完成
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;点到点网络两次握手默认采用三次握手&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#点到点网络两次握手默认采用三次握手&#34;&gt;#&lt;/a&gt; 点到点网络（两次握手，默认采用三次握手）&lt;/h6&gt;
&lt;p&gt;​	R1&amp;lt;——————————&amp;gt;R2&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设备初始状态都处于 down 状态&lt;/li&gt;
&lt;li&gt;运行或激活接口 ISIS 后，发送 hello 报文，假设 R1 先发送 Hello 报文&lt;/li&gt;
&lt;li&gt;R1 发送 hello 报文后，报文中的邻接列表为空&lt;/li&gt;
&lt;li&gt;R2 收到 R1 的 hello 报文后，直接将 R1 列为自己的邻接路由器，并将状态转变为 UP&lt;/li&gt;
&lt;li&gt;R2 发送 hello 报文，报文中的邻接列表中有 R1 的 System id&lt;/li&gt;
&lt;li&gt;R1 收到 R2 的 hello 报文后，将 R2 列为自己的邻接路由器，邻接关系建立完成&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;配置接口使用两次握手建立邻接关系：&lt;/p&gt;
&lt;p&gt;配置接口交互 hello 次数：isis ppp- negotiation 2-way&lt;/p&gt;
&lt;p&gt;PPP 链路两端 IP 不处于同一网段使用&lt;/p&gt;
&lt;p&gt;[huawei-serial 1/0/0] isis peer-ip-ignore // 配置 PPP 链路不检查对端 IP 地址&lt;/p&gt;
&lt;h6 id=&#34;dis和伪节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dis和伪节点&#34;&gt;#&lt;/a&gt; DIS 和伪节点：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;1. DIS通过所有路由器选举产生
2. 负责产生伪节点的LSP
3. 用于周期发送CSNP报文，同步网络中的路由器的LSDB
4. 伪节点LSP使用DIS的system id 和 circuit id 进行标识，当circuit id 为非零时，表示LSP为伪节点LSP
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;dis的选举规则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dis的选举规则&#34;&gt;#&lt;/a&gt; DIS 的选举规则：&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;比较设备的优先级，以大为优，优先级越高越容易成为 DIS 设备&lt;/p&gt;
&lt;p&gt;设备优先级：0-127，默认 63，&lt;strong&gt;ISIS 的优先级为 0 的设备参与选举 DIS&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优先级相同时，比较 MAC 地址，MAC 地址大的作为 DIS 设备&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ISIS 的 hello 报文间隔时间为 10s，DIS 的 hello 时间间隔为 10/3, 邻接失效时间 3 倍 10s&lt;/p&gt;
&lt;h6 id=&#34;isis的dis和ospf的dr的对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#isis的dis和ospf的dr的对比&#34;&gt;#&lt;/a&gt; ISIS 的 DIS 和 OSPF 的 DR 的对比：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;1. 优先级为0的设备参不参与选举
2. 抢占，DIS支持抢占，DR不支持
3. 选举规则不同，优先级相同时，DIS比较MAC地址,DR比较router id
4. hello 时间间隔，DR的时间间隔为10/3,死亡时间
5. 有无备份,DR存在备份BDR,DIS不存在备份
6. 作用不同，DR的作用-减少邻接关系，DIS的作用-周期发送CSNP同步LSDB
7. 选择过程不同，DR选举过程为其他路由器感知自己为DR设备，DIS初始化默认自己为DIS
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;lsp报文格式900s&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lsp报文格式900s&#34;&gt;#&lt;/a&gt; LSP 报文格式：900s&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;PDU length：报文的长度&lt;/li&gt;
&lt;li&gt;Remaining Lifetime：生存时间，时间范围 0 —1200 , 时间为递减&lt;/li&gt;
&lt;li&gt;LSP ID：由 System id，伪节点 id，LSP 分片 id 组成，用于标识一条 LSP&lt;/li&gt;
&lt;li&gt;Sequence number ：序列号，与 OSPF 的 LSA 的序列号作用一致&lt;/li&gt;
&lt;li&gt;check sum：校验和，用于检验 LSP 的完整性&lt;/li&gt;
&lt;li&gt;P：是否支持自动修复&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ATT&lt;/strong&gt;：由 level 1/2 路由器产生的 LSP 置位，用于 level 1 区域的路由器访问 level 2 区域使用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OL(overload)&lt;/strong&gt;：过载比特位，当 LSP 的 OL 置位后，其他路由器将不会使用 LSP 进行路由计算&lt;/li&gt;
&lt;li&gt;IS type：标识生成此条 LSP 的路由角色&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2022-11-23T23:29:59.800Z</updated>
    </entry>
</feed>
